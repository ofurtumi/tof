
bomb:     file format elf64-x86-64

SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000              Scrt1.o
000000000000038c l     O .note.ABI-tag	0000000000000020              __abi_tag
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
00000000000013f0 l     F .text	0000000000000000              deregister_tm_clones
0000000000001420 l     F .text	0000000000000000              register_tm_clones
0000000000001460 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000005688 l     O .bss	0000000000000001              completed.0
0000000000004ce8 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
00000000000014a0 l     F .text	0000000000000000              frame_dummy
0000000000004ce0 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              bomb.c
0000000000000000 l    df *ABS*	0000000000000000              phases.c
00000000000031e0 l     O .rodata	0000000000000040              array.0
0000000000000000 l    df *ABS*	0000000000000000              support.c
0000000000001a51 l     F .text	0000000000000062              sig_handler
0000000000000000 l    df *ABS*	0000000000000000              driverlib.c
0000000000001e9d l     F .text	00000000000000cc              rio_readlineb
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000003ae0 l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000004cf0 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000003520 l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000004ee0 l     O .got	0000000000000000              _GLOBAL_OFFSET_TABLE_
0000000000001bc3 g     F .text	0000000000000052              skip
0000000000000000       F *UND*	0000000000000000              getenv@GLIBC_2.2.5
0000000000001dbe g     F .text	00000000000000a9              phase_defused
00000000000051d0 g     O .data	0000000000000018              n31
0000000000000000       F *UND*	0000000000000000              __libc_start_main@GLIBC_2.34
0000000000000000       F *UND*	0000000000000000              __errno_location@GLIBC_2.2.5
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
0000000000005660 g     O .bss	0000000000000008              stdout@GLIBC_2.2.5
0000000000005000  w      .data	0000000000000000              data_start
0000000000005700 g     O .bss	0000000000000640              input_strings
0000000000000000       F *UND*	0000000000000000              strcpy@GLIBC_2.2.5
00000000000051b0 g     O .data	0000000000000018              n33
0000000000000000       F *UND*	0000000000000000              puts@GLIBC_2.2.5
0000000000005670 g     O .bss	0000000000000008              stdin@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              write@GLIBC_2.2.5
0000000000005660 g       .data	0000000000000000              _edata
0000000000005070 g     O .data	0000000000000018              n44
00000000000050d0 g     O .data	0000000000000018              n46
0000000000005090 g     O .data	0000000000000018              n42
00000000000050f0 g     O .data	0000000000000018              n48
0000000000002a08 g     F .fini	0000000000000000              .hidden _fini
0000000000000000       F *UND*	0000000000000000              strlen@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              __stack_chk_fail@GLIBC_2.4
00000000000056f0 g     O .bss	0000000000000004              num_input_strings
0000000000001840 g     F .text	000000000000004c              phase_5
0000000000001b7f g     F .text	0000000000000005              initialize_bomb_solve
0000000000001b84 g     F .text	000000000000003f              blank_line
0000000000001f69 g     F .text	0000000000000803              submitr
00000000000016a0 g     F .text	00000000000000e6              phase_3
0000000000001607 g     F .text	0000000000000024              phase_1
0000000000000000       F *UND*	0000000000000000              memset@GLIBC_2.2.5
0000000000001ab3 g     F .text	000000000000002d              invalid_phase
000000000000279c g     F .text	00000000000001f5              init_driver
0000000000000000       F *UND*	0000000000000000              alarm@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              close@GLIBC_2.2.5
0000000000005230 g     O .data	0000000000000010              node3
0000000000000000       F *UND*	0000000000000000              read@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              fgets@GLIBC_2.2.5
0000000000001c15 g     F .text	000000000000002c              explode_bomb
0000000000005210 g     O .data	0000000000000010              node1
0000000000005000 g       .data	0000000000000000              __data_start
0000000000000000       F *UND*	0000000000000000              strcmp@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              signal@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              gethostbyname@GLIBC_2.2.5
0000000000005250 g     O .data	0000000000000010              node5
0000000000000000       F *UND*	0000000000000000              __memmove_chk@GLIBC_2.3.4
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000000000       F *UND*	0000000000000000              strtol@GLIBC_2.2.5
00000000000019b4 g     F .text	0000000000000041              fun7
0000000000005008 g     O .data	0000000000000000              .hidden __dso_handle
0000000000003000 g     O .rodata	0000000000000004              _IO_stdin_used
0000000000005170 g     O .data	0000000000000018              n22
0000000000005260 g     O .data	0000000000000400              host_table
0000000000001786 g     F .text	0000000000000041              func4
0000000000005130 g     O .data	0000000000000018              n1
0000000000001ae0 g     F .text	0000000000000021              string_length
0000000000000000       F *UND*	0000000000000000              fflush@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              __isoc99_sscanf@GLIBC_2.7
00000000000051f0 g     O .data	0000000000000018              n34
0000000000005190 g     O .data	0000000000000018              n32
0000000000005d40 g       .bss	0000000000000000              _end
00000000000013c0 g     F .text	0000000000000026              _start
00000000000019f5 g     F .text	000000000000005c              secret_phase
0000000000005690 g     O .bss	0000000000000008              infile
0000000000001e67 g     F .text	0000000000000036              sigalrm_handler
000000000000276c g     F .text	0000000000000030              init_timeout
0000000000005660 g       .bss	0000000000000000              __bss_start
00000000000014a9 g     F .text	000000000000015e              main
0000000000000000       F *UND*	0000000000000000              __printf_chk@GLIBC_2.3.4
0000000000005050 g     O .data	0000000000000018              n47
00000000000050b0 g     O .data	0000000000000018              n43
0000000000005030 g     O .data	0000000000000018              n41
0000000000001c86 g     F .text	0000000000000138              read_line
0000000000005010 g     O .data	0000000000000018              n45
0000000000001b01 g     F .text	0000000000000060              strings_not_equal
00000000000017c7 g     F .text	0000000000000079              phase_4
0000000000000000       F *UND*	0000000000000000              fopen@GLIBC_2.2.5
000000000000188c g     F .text	0000000000000128              phase_6
00000000000056a0 g     O .bss	0000000000000050              scratch
0000000000002991 g     F .text	0000000000000077              driver_post
000000000000162b g     F .text	0000000000000075              phase_2
0000000000000000       F *UND*	0000000000000000              exit@GLIBC_2.2.5
0000000000005120 g     O .data	0000000000000004              bomb_id
0000000000000000       F *UND*	0000000000000000              connect@GLIBC_2.2.5
0000000000005660 g     O .data	0000000000000000              .hidden __TMC_END__
0000000000000000       F *UND*	0000000000000000              __fprintf_chk@GLIBC_2.3.4
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
0000000000005220 g     O .data	0000000000000010              node2
0000000000005240 g     O .data	0000000000000010              node4
0000000000000000       F *UND*	0000000000000000              sleep@GLIBC_2.2.5
0000000000005110 g     O .data	0000000000000010              node6
0000000000000000  w    F *UND*	0000000000000000              __cxa_finalize@GLIBC_2.2.5
0000000000001000 g     F .init	0000000000000000              .hidden _init
0000000000001c41 g     F .text	0000000000000045              read_six_numbers
0000000000005150 g     O .data	0000000000000018              n21
0000000000001b61 g     F .text	000000000000001e              initialize_bomb
0000000000000000       F *UND*	0000000000000000              __ctype_b_loc@GLIBC_2.3
0000000000005680 g     O .bss	0000000000000008              stderr@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              __sprintf_chk@GLIBC_2.3.4
0000000000000000       F *UND*	0000000000000000              socket@GLIBC_2.2.5



Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 3f 00 00 	mov    0x3fd9(%rip),%rax        # 4fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 c2 3e 00 00    	push   0x3ec2(%rip)        # 4ee8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 c3 3e 00 00 	bnd jmp *0x3ec3(%rip)        # 4ef0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	push   $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmp 1020 <_init+0x20>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	push   $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmp 1020 <_init+0x20>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	push   $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	push   $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10bf:	90                   	nop
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	68 09 00 00 00       	push   $0x9
    10c9:	f2 e9 51 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10cf:	90                   	nop
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	68 0a 00 00 00       	push   $0xa
    10d9:	f2 e9 41 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10df:	90                   	nop
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	68 0b 00 00 00       	push   $0xb
    10e9:	f2 e9 31 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10ef:	90                   	nop
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	68 0c 00 00 00       	push   $0xc
    10f9:	f2 e9 21 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10ff:	90                   	nop
    1100:	f3 0f 1e fa          	endbr64 
    1104:	68 0d 00 00 00       	push   $0xd
    1109:	f2 e9 11 ff ff ff    	bnd jmp 1020 <_init+0x20>
    110f:	90                   	nop
    1110:	f3 0f 1e fa          	endbr64 
    1114:	68 0e 00 00 00       	push   $0xe
    1119:	f2 e9 01 ff ff ff    	bnd jmp 1020 <_init+0x20>
    111f:	90                   	nop
    1120:	f3 0f 1e fa          	endbr64 
    1124:	68 0f 00 00 00       	push   $0xf
    1129:	f2 e9 f1 fe ff ff    	bnd jmp 1020 <_init+0x20>
    112f:	90                   	nop
    1130:	f3 0f 1e fa          	endbr64 
    1134:	68 10 00 00 00       	push   $0x10
    1139:	f2 e9 e1 fe ff ff    	bnd jmp 1020 <_init+0x20>
    113f:	90                   	nop
    1140:	f3 0f 1e fa          	endbr64 
    1144:	68 11 00 00 00       	push   $0x11
    1149:	f2 e9 d1 fe ff ff    	bnd jmp 1020 <_init+0x20>
    114f:	90                   	nop
    1150:	f3 0f 1e fa          	endbr64 
    1154:	68 12 00 00 00       	push   $0x12
    1159:	f2 e9 c1 fe ff ff    	bnd jmp 1020 <_init+0x20>
    115f:	90                   	nop
    1160:	f3 0f 1e fa          	endbr64 
    1164:	68 13 00 00 00       	push   $0x13
    1169:	f2 e9 b1 fe ff ff    	bnd jmp 1020 <_init+0x20>
    116f:	90                   	nop
    1170:	f3 0f 1e fa          	endbr64 
    1174:	68 14 00 00 00       	push   $0x14
    1179:	f2 e9 a1 fe ff ff    	bnd jmp 1020 <_init+0x20>
    117f:	90                   	nop
    1180:	f3 0f 1e fa          	endbr64 
    1184:	68 15 00 00 00       	push   $0x15
    1189:	f2 e9 91 fe ff ff    	bnd jmp 1020 <_init+0x20>
    118f:	90                   	nop
    1190:	f3 0f 1e fa          	endbr64 
    1194:	68 16 00 00 00       	push   $0x16
    1199:	f2 e9 81 fe ff ff    	bnd jmp 1020 <_init+0x20>
    119f:	90                   	nop
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	68 17 00 00 00       	push   $0x17
    11a9:	f2 e9 71 fe ff ff    	bnd jmp 1020 <_init+0x20>
    11af:	90                   	nop
    11b0:	f3 0f 1e fa          	endbr64 
    11b4:	68 18 00 00 00       	push   $0x18
    11b9:	f2 e9 61 fe ff ff    	bnd jmp 1020 <_init+0x20>
    11bf:	90                   	nop
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	68 19 00 00 00       	push   $0x19
    11c9:	f2 e9 51 fe ff ff    	bnd jmp 1020 <_init+0x20>
    11cf:	90                   	nop
    11d0:	f3 0f 1e fa          	endbr64 
    11d4:	68 1a 00 00 00       	push   $0x1a
    11d9:	f2 e9 41 fe ff ff    	bnd jmp 1020 <_init+0x20>
    11df:	90                   	nop
    11e0:	f3 0f 1e fa          	endbr64 
    11e4:	68 1b 00 00 00       	push   $0x1b
    11e9:	f2 e9 31 fe ff ff    	bnd jmp 1020 <_init+0x20>
    11ef:	90                   	nop

Disassembly of section .plt.got:

00000000000011f0 <__cxa_finalize@plt>:
    11f0:	f3 0f 1e fa          	endbr64 
    11f4:	f2 ff 25 fd 3d 00 00 	bnd jmp *0x3dfd(%rip)        # 4ff8 <__cxa_finalize@GLIBC_2.2.5>
    11fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001200 <getenv@plt>:
    1200:	f3 0f 1e fa          	endbr64 
    1204:	f2 ff 25 ed 3c 00 00 	bnd jmp *0x3ced(%rip)        # 4ef8 <getenv@GLIBC_2.2.5>
    120b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001210 <__errno_location@plt>:
    1210:	f3 0f 1e fa          	endbr64 
    1214:	f2 ff 25 e5 3c 00 00 	bnd jmp *0x3ce5(%rip)        # 4f00 <__errno_location@GLIBC_2.2.5>
    121b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001220 <strcpy@plt>:
    1220:	f3 0f 1e fa          	endbr64 
    1224:	f2 ff 25 dd 3c 00 00 	bnd jmp *0x3cdd(%rip)        # 4f08 <strcpy@GLIBC_2.2.5>
    122b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001230 <puts@plt>:
    1230:	f3 0f 1e fa          	endbr64 
    1234:	f2 ff 25 d5 3c 00 00 	bnd jmp *0x3cd5(%rip)        # 4f10 <puts@GLIBC_2.2.5>
    123b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001240 <write@plt>:
    1240:	f3 0f 1e fa          	endbr64 
    1244:	f2 ff 25 cd 3c 00 00 	bnd jmp *0x3ccd(%rip)        # 4f18 <write@GLIBC_2.2.5>
    124b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001250 <strlen@plt>:
    1250:	f3 0f 1e fa          	endbr64 
    1254:	f2 ff 25 c5 3c 00 00 	bnd jmp *0x3cc5(%rip)        # 4f20 <strlen@GLIBC_2.2.5>
    125b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001260 <__stack_chk_fail@plt>:
    1260:	f3 0f 1e fa          	endbr64 
    1264:	f2 ff 25 bd 3c 00 00 	bnd jmp *0x3cbd(%rip)        # 4f28 <__stack_chk_fail@GLIBC_2.4>
    126b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001270 <memset@plt>:
    1270:	f3 0f 1e fa          	endbr64 
    1274:	f2 ff 25 b5 3c 00 00 	bnd jmp *0x3cb5(%rip)        # 4f30 <memset@GLIBC_2.2.5>
    127b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001280 <alarm@plt>:
    1280:	f3 0f 1e fa          	endbr64 
    1284:	f2 ff 25 ad 3c 00 00 	bnd jmp *0x3cad(%rip)        # 4f38 <alarm@GLIBC_2.2.5>
    128b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001290 <close@plt>:
    1290:	f3 0f 1e fa          	endbr64 
    1294:	f2 ff 25 a5 3c 00 00 	bnd jmp *0x3ca5(%rip)        # 4f40 <close@GLIBC_2.2.5>
    129b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012a0 <read@plt>:
    12a0:	f3 0f 1e fa          	endbr64 
    12a4:	f2 ff 25 9d 3c 00 00 	bnd jmp *0x3c9d(%rip)        # 4f48 <read@GLIBC_2.2.5>
    12ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012b0 <fgets@plt>:
    12b0:	f3 0f 1e fa          	endbr64 
    12b4:	f2 ff 25 95 3c 00 00 	bnd jmp *0x3c95(%rip)        # 4f50 <fgets@GLIBC_2.2.5>
    12bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012c0 <strcmp@plt>:
    12c0:	f3 0f 1e fa          	endbr64 
    12c4:	f2 ff 25 8d 3c 00 00 	bnd jmp *0x3c8d(%rip)        # 4f58 <strcmp@GLIBC_2.2.5>
    12cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012d0 <signal@plt>:
    12d0:	f3 0f 1e fa          	endbr64 
    12d4:	f2 ff 25 85 3c 00 00 	bnd jmp *0x3c85(%rip)        # 4f60 <signal@GLIBC_2.2.5>
    12db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012e0 <gethostbyname@plt>:
    12e0:	f3 0f 1e fa          	endbr64 
    12e4:	f2 ff 25 7d 3c 00 00 	bnd jmp *0x3c7d(%rip)        # 4f68 <gethostbyname@GLIBC_2.2.5>
    12eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012f0 <__memmove_chk@plt>:
    12f0:	f3 0f 1e fa          	endbr64 
    12f4:	f2 ff 25 75 3c 00 00 	bnd jmp *0x3c75(%rip)        # 4f70 <__memmove_chk@GLIBC_2.3.4>
    12fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001300 <strtol@plt>:
    1300:	f3 0f 1e fa          	endbr64 
    1304:	f2 ff 25 6d 3c 00 00 	bnd jmp *0x3c6d(%rip)        # 4f78 <strtol@GLIBC_2.2.5>
    130b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001310 <fflush@plt>:
    1310:	f3 0f 1e fa          	endbr64 
    1314:	f2 ff 25 65 3c 00 00 	bnd jmp *0x3c65(%rip)        # 4f80 <fflush@GLIBC_2.2.5>
    131b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001320 <__isoc99_sscanf@plt>:
    1320:	f3 0f 1e fa          	endbr64 
    1324:	f2 ff 25 5d 3c 00 00 	bnd jmp *0x3c5d(%rip)        # 4f88 <__isoc99_sscanf@GLIBC_2.7>
    132b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001330 <__printf_chk@plt>:
    1330:	f3 0f 1e fa          	endbr64 
    1334:	f2 ff 25 55 3c 00 00 	bnd jmp *0x3c55(%rip)        # 4f90 <__printf_chk@GLIBC_2.3.4>
    133b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001340 <fopen@plt>:
    1340:	f3 0f 1e fa          	endbr64 
    1344:	f2 ff 25 4d 3c 00 00 	bnd jmp *0x3c4d(%rip)        # 4f98 <fopen@GLIBC_2.2.5>
    134b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001350 <exit@plt>:
    1350:	f3 0f 1e fa          	endbr64 
    1354:	f2 ff 25 45 3c 00 00 	bnd jmp *0x3c45(%rip)        # 4fa0 <exit@GLIBC_2.2.5>
    135b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001360 <connect@plt>:
    1360:	f3 0f 1e fa          	endbr64 
    1364:	f2 ff 25 3d 3c 00 00 	bnd jmp *0x3c3d(%rip)        # 4fa8 <connect@GLIBC_2.2.5>
    136b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001370 <__fprintf_chk@plt>:
    1370:	f3 0f 1e fa          	endbr64 
    1374:	f2 ff 25 35 3c 00 00 	bnd jmp *0x3c35(%rip)        # 4fb0 <__fprintf_chk@GLIBC_2.3.4>
    137b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001380 <sleep@plt>:
    1380:	f3 0f 1e fa          	endbr64 
    1384:	f2 ff 25 2d 3c 00 00 	bnd jmp *0x3c2d(%rip)        # 4fb8 <sleep@GLIBC_2.2.5>
    138b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001390 <__ctype_b_loc@plt>:
    1390:	f3 0f 1e fa          	endbr64 
    1394:	f2 ff 25 25 3c 00 00 	bnd jmp *0x3c25(%rip)        # 4fc0 <__ctype_b_loc@GLIBC_2.3>
    139b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000013a0 <__sprintf_chk@plt>:
    13a0:	f3 0f 1e fa          	endbr64 
    13a4:	f2 ff 25 1d 3c 00 00 	bnd jmp *0x3c1d(%rip)        # 4fc8 <__sprintf_chk@GLIBC_2.3.4>
    13ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000013b0 <socket@plt>:
    13b0:	f3 0f 1e fa          	endbr64 
    13b4:	f2 ff 25 15 3c 00 00 	bnd jmp *0x3c15(%rip)        # 4fd0 <socket@GLIBC_2.2.5>
    13bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000013c0 <_start>:
    13c0:	f3 0f 1e fa          	endbr64 
    13c4:	31 ed                	xor    %ebp,%ebp
    13c6:	49 89 d1             	mov    %rdx,%r9
    13c9:	5e                   	pop    %rsi
    13ca:	48 89 e2             	mov    %rsp,%rdx
    13cd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    13d1:	50                   	push   %rax
    13d2:	54                   	push   %rsp
    13d3:	45 31 c0             	xor    %r8d,%r8d
    13d6:	31 c9                	xor    %ecx,%ecx
    13d8:	48 8d 3d ca 00 00 00 	lea    0xca(%rip),%rdi        # 14a9 <main>
    13df:	ff 15 f3 3b 00 00    	call   *0x3bf3(%rip)        # 4fd8 <__libc_start_main@GLIBC_2.34>
    13e5:	f4                   	hlt    
    13e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    13ed:	00 00 00 

00000000000013f0 <deregister_tm_clones>:
    13f0:	48 8d 3d 69 42 00 00 	lea    0x4269(%rip),%rdi        # 5660 <stdout@GLIBC_2.2.5>
    13f7:	48 8d 05 62 42 00 00 	lea    0x4262(%rip),%rax        # 5660 <stdout@GLIBC_2.2.5>
    13fe:	48 39 f8             	cmp    %rdi,%rax
    1401:	74 15                	je     1418 <deregister_tm_clones+0x28>
    1403:	48 8b 05 d6 3b 00 00 	mov    0x3bd6(%rip),%rax        # 4fe0 <_ITM_deregisterTMCloneTable@Base>
    140a:	48 85 c0             	test   %rax,%rax
    140d:	74 09                	je     1418 <deregister_tm_clones+0x28>
    140f:	ff e0                	jmp    *%rax
    1411:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1418:	c3                   	ret    
    1419:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001420 <register_tm_clones>:
    1420:	48 8d 3d 39 42 00 00 	lea    0x4239(%rip),%rdi        # 5660 <stdout@GLIBC_2.2.5>
    1427:	48 8d 35 32 42 00 00 	lea    0x4232(%rip),%rsi        # 5660 <stdout@GLIBC_2.2.5>
    142e:	48 29 fe             	sub    %rdi,%rsi
    1431:	48 89 f0             	mov    %rsi,%rax
    1434:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1438:	48 c1 f8 03          	sar    $0x3,%rax
    143c:	48 01 c6             	add    %rax,%rsi
    143f:	48 d1 fe             	sar    %rsi
    1442:	74 14                	je     1458 <register_tm_clones+0x38>
    1444:	48 8b 05 a5 3b 00 00 	mov    0x3ba5(%rip),%rax        # 4ff0 <_ITM_registerTMCloneTable@Base>
    144b:	48 85 c0             	test   %rax,%rax
    144e:	74 08                	je     1458 <register_tm_clones+0x38>
    1450:	ff e0                	jmp    *%rax
    1452:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1458:	c3                   	ret    
    1459:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001460 <__do_global_dtors_aux>:
    1460:	f3 0f 1e fa          	endbr64 
    1464:	80 3d 1d 42 00 00 00 	cmpb   $0x0,0x421d(%rip)        # 5688 <completed.0>
    146b:	75 2b                	jne    1498 <__do_global_dtors_aux+0x38>
    146d:	55                   	push   %rbp
    146e:	48 83 3d 82 3b 00 00 	cmpq   $0x0,0x3b82(%rip)        # 4ff8 <__cxa_finalize@GLIBC_2.2.5>
    1475:	00 
    1476:	48 89 e5             	mov    %rsp,%rbp
    1479:	74 0c                	je     1487 <__do_global_dtors_aux+0x27>
    147b:	48 8b 3d 86 3b 00 00 	mov    0x3b86(%rip),%rdi        # 5008 <__dso_handle>
    1482:	e8 69 fd ff ff       	call   11f0 <__cxa_finalize@plt>
    1487:	e8 64 ff ff ff       	call   13f0 <deregister_tm_clones>
    148c:	c6 05 f5 41 00 00 01 	movb   $0x1,0x41f5(%rip)        # 5688 <completed.0>
    1493:	5d                   	pop    %rbp
    1494:	c3                   	ret    
    1495:	0f 1f 00             	nopl   (%rax)
    1498:	c3                   	ret    
    1499:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000014a0 <frame_dummy>:
    14a0:	f3 0f 1e fa          	endbr64 
    14a4:	e9 77 ff ff ff       	jmp    1420 <register_tm_clones>

00000000000014a9 <main>:
    14a9:	f3 0f 1e fa          	endbr64 
    14ad:	53                   	push   %rbx
    14ae:	83 ff 01             	cmp    $0x1,%edi
    14b1:	0f 84 f8 00 00 00    	je     15af <main+0x106>
    14b7:	48 89 f3             	mov    %rsi,%rbx
    14ba:	83 ff 02             	cmp    $0x2,%edi
    14bd:	0f 85 21 01 00 00    	jne    15e4 <main+0x13b>
    14c3:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
    14c7:	48 8d 35 36 1b 00 00 	lea    0x1b36(%rip),%rsi        # 3004 <_IO_stdin_used+0x4>
    14ce:	e8 6d fe ff ff       	call   1340 <fopen@plt>
    14d3:	48 89 05 b6 41 00 00 	mov    %rax,0x41b6(%rip)        # 5690 <infile>
    14da:	48 85 c0             	test   %rax,%rax
    14dd:	0f 84 df 00 00 00    	je     15c2 <main+0x119>
    14e3:	e8 79 06 00 00       	call   1b61 <initialize_bomb>
    14e8:	48 8d 3d 99 1b 00 00 	lea    0x1b99(%rip),%rdi        # 3088 <_IO_stdin_used+0x88>
    14ef:	e8 3c fd ff ff       	call   1230 <puts@plt>
    14f4:	48 8d 3d cd 1b 00 00 	lea    0x1bcd(%rip),%rdi        # 30c8 <_IO_stdin_used+0xc8>
    14fb:	e8 30 fd ff ff       	call   1230 <puts@plt>
    1500:	e8 81 07 00 00       	call   1c86 <read_line>
    1505:	48 89 c7             	mov    %rax,%rdi
    1508:	e8 fa 00 00 00       	call   1607 <phase_1>
    150d:	e8 ac 08 00 00       	call   1dbe <phase_defused>
    1512:	48 8d 3d df 1b 00 00 	lea    0x1bdf(%rip),%rdi        # 30f8 <_IO_stdin_used+0xf8>
    1519:	e8 12 fd ff ff       	call   1230 <puts@plt>
    151e:	e8 63 07 00 00       	call   1c86 <read_line>
    1523:	48 89 c7             	mov    %rax,%rdi
    1526:	e8 00 01 00 00       	call   162b <phase_2>
    152b:	e8 8e 08 00 00       	call   1dbe <phase_defused>
    1530:	48 8d 3d 06 1b 00 00 	lea    0x1b06(%rip),%rdi        # 303d <_IO_stdin_used+0x3d>
    1537:	e8 f4 fc ff ff       	call   1230 <puts@plt>
    153c:	e8 45 07 00 00       	call   1c86 <read_line>
    1541:	48 89 c7             	mov    %rax,%rdi
    1544:	e8 57 01 00 00       	call   16a0 <phase_3>
    1549:	e8 70 08 00 00       	call   1dbe <phase_defused>
    154e:	48 8d 3d 06 1b 00 00 	lea    0x1b06(%rip),%rdi        # 305b <_IO_stdin_used+0x5b>
    1555:	e8 d6 fc ff ff       	call   1230 <puts@plt>
    155a:	e8 27 07 00 00       	call   1c86 <read_line>
    155f:	48 89 c7             	mov    %rax,%rdi
    1562:	e8 60 02 00 00       	call   17c7 <phase_4>
    1567:	e8 52 08 00 00       	call   1dbe <phase_defused>
    156c:	48 8d 3d b5 1b 00 00 	lea    0x1bb5(%rip),%rdi        # 3128 <_IO_stdin_used+0x128>
    1573:	e8 b8 fc ff ff       	call   1230 <puts@plt>
    1578:	e8 09 07 00 00       	call   1c86 <read_line>
    157d:	48 89 c7             	mov    %rax,%rdi
    1580:	e8 bb 02 00 00       	call   1840 <phase_5>
    1585:	e8 34 08 00 00       	call   1dbe <phase_defused>
    158a:	48 8d 3d d9 1a 00 00 	lea    0x1ad9(%rip),%rdi        # 306a <_IO_stdin_used+0x6a>
    1591:	e8 9a fc ff ff       	call   1230 <puts@plt>
    1596:	e8 eb 06 00 00       	call   1c86 <read_line>
    159b:	48 89 c7             	mov    %rax,%rdi
    159e:	e8 e9 02 00 00       	call   188c <phase_6>
    15a3:	e8 16 08 00 00       	call   1dbe <phase_defused>
    15a8:	b8 00 00 00 00       	mov    $0x0,%eax
    15ad:	5b                   	pop    %rbx
    15ae:	c3                   	ret    
    15af:	48 8b 05 ba 40 00 00 	mov    0x40ba(%rip),%rax        # 5670 <stdin@GLIBC_2.2.5>
    15b6:	48 89 05 d3 40 00 00 	mov    %rax,0x40d3(%rip)        # 5690 <infile>
    15bd:	e9 21 ff ff ff       	jmp    14e3 <main+0x3a>
    15c2:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
    15c6:	48 8b 13             	mov    (%rbx),%rdx
    15c9:	48 8d 35 36 1a 00 00 	lea    0x1a36(%rip),%rsi        # 3006 <_IO_stdin_used+0x6>
    15d0:	bf 01 00 00 00       	mov    $0x1,%edi
    15d5:	e8 56 fd ff ff       	call   1330 <__printf_chk@plt>
    15da:	bf 08 00 00 00       	mov    $0x8,%edi
    15df:	e8 6c fd ff ff       	call   1350 <exit@plt>
    15e4:	48 8b 16             	mov    (%rsi),%rdx
    15e7:	48 8d 35 35 1a 00 00 	lea    0x1a35(%rip),%rsi        # 3023 <_IO_stdin_used+0x23>
    15ee:	bf 01 00 00 00       	mov    $0x1,%edi
    15f3:	b8 00 00 00 00       	mov    $0x0,%eax
    15f8:	e8 33 fd ff ff       	call   1330 <__printf_chk@plt>
    15fd:	bf 08 00 00 00       	mov    $0x8,%edi
    1602:	e8 49 fd ff ff       	call   1350 <exit@plt>

0000000000001607 <phase_1>:
    1607:	f3 0f 1e fa          	endbr64 
    160b:	48 83 ec 08          	sub    $0x8,%rsp		
    160f:	48 8d 35 3a 1b 00 00 	lea    0x1b3a(%rip),%rsi        # 3150 <_IO_stdin_used+0x150>
    1616:	e8 e6 04 00 00       	call   1b01 <strings_not_equal>
    161b:	85 c0                	test   %eax,%eax
    161d:	75 05                	jne    1624 <phase_1+0x1d>
    161f:	48 83 c4 08          	add    $0x8,%rsp
    1623:	c3                   	ret    
    1624:	e8 ec 05 00 00       	call   1c15 <explode_bomb>
    1629:	eb f4                	jmp    161f <phase_1+0x18>

000000000000162b <phase_2>:
    162b:	f3 0f 1e fa          	endbr64 
    162f:	55                   	push   %rbp
    1630:	53                   	push   %rbx
    1631:	48 83 ec 28          	sub    $0x28,%rsp
    1635:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    163c:	00 00 
    163e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    1643:	31 c0                	xor    %eax,%eax
    1645:	48 89 e6             	mov    %rsp,%rsi
    1648:	e8 f4 05 00 00       	call   1c41 <read_six_numbers>	# lesa 6 tölur 
    164d:	83 3c 24 01          	cmpl   $0x1,(%rsp)		# ef %rsp ekki jafnt og 1, hoppa til 165d
    1651:	75 0a                	jne    165d <phase_2+0x32>	# kemst hingað ef %rsp jafnt og 1
    1653:	48 89 e5             	mov    %rsp,%rbp                # færir %rsp inn í %rbp sem er á stackinu
    1656:	bb 02 00 00 00       	mov    $0x2,%ebx                # setur töluna 2 inn í ebx
    165b:	eb 13                	jmp    1670 <phase_2+0x45>      # hoppa yfir í 1670
    165d:	e8 b3 05 00 00       	call   1c15 <explode_bomb>      # 165d
    1662:	eb ef                	jmp    1653 <phase_2+0x28>      # 
    1664:	48 83 c5 04          	add    $0x4,%rbp                # 1664, hliðrar um 4 bæti, núna er annað stak í %rbp orðið fyrsta stak
    1668:	83 c3 02             	add    $0x2,%ebx                # bætir 2 við %ebx
    166b:	83 fb 0c             	cmp    $0xc,%ebx                # athugar hvort %ebx sé jafnt og 12, stop condition á lykkjunni
    166e:	74 14                	je     1684 <phase_2+0x59>      
    1670:	89 d8                	mov    %ebx,%eax                # 1670, færir gildið í %ebx, inn í %eax
    1672:	03 45 00             	add    0x0(%rbp),%eax           # bætir fyrsta gildi í %rbp við %eax
    1675:	83 c0 01             	add    $0x1,%eax                # bætir einum við %eax, gildið núna orðið %eax+%rbp+1
    1678:	39 45 04             	cmp    %eax,0x4(%rbp)           # ber saman %eax og (%rbp + 0x4), þ.e. næsta gildi af tölunum 6
    167b:	74 e7                	je     1664 <phase_2+0x39>      # hoppa ef önnur tölurnar eru jafnar
    167d:	e8 93 05 00 00       	call   1c15 <explode_bomb>
    1682:	eb e0                	jmp    1664 <phase_2+0x39>
    1684:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1689:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    1690:	00 00 
    1692:	75 07                	jne    169b <phase_2+0x70>
    1694:	48 83 c4 28          	add    $0x28,%rsp
    1698:	5b                   	pop    %rbx
    1699:	5d                   	pop    %rbp
    169a:	c3                   	ret    
    169b:	e8 c0 fb ff ff       	call   1260 <__stack_chk_fail@plt>

00000000000016a0 <phase_3>:
    16a0:	f3 0f 1e fa          	endbr64 
    16a4:	48 83 ec 18          	sub    $0x18,%rsp
    16a8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    16af:	00 00 
    16b1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)		
    16b6:	31 c0                	xor    %eax,%eax		
    16b8:	48 8d 4c 24 04       	lea    0x4(%rsp),%rcx		# setja %rcx sem %rsp+4, annað stakið í inntaki
    16bd:	48 89 e2             	mov    %rsp,%rdx		# færa allt inntakip inn í %rdx
    16c0:	48 8d 35 68 1c 00 00 	lea    0x1c68(%rip),%rsi        # 0x55555555732f, kíkjum á hvað er í þessari addressu sem (char *) fáum út "%d %d"
    16c7:	e8 54 fc ff ff       	call   1320 <__isoc99_sscanf@plt>	# athugar hvort input sé á réttu formi
    16cc:	83 f8 01             	cmp    $0x1,%eax		# athugar er inntakið 2 tölur
    16cf:	7e 1e                	jle    16ef <phase_3+0x4f> 	# ef ekki, hoppa á explode bomb
    16d1:	83 3c 24 07          	cmpl   $0x7,(%rsp)		# passar að fyrsta stak sé minna eða jafnt og 7
    16d5:	0f 87 9a 00 00 00    	ja     1775 <phase_3+0xd5>	# sprengir ef yfir 7, hoppar í 1775 sem er explode
    16db:	8b 04 24             	mov    (%rsp),%eax		# færir $rsp inn í $eax
    16de:	48 8d 15 db 1a 00 00 	lea    0x1adb(%rip),%rdx        # athugum hvað er í addressunni 0x5555555571c0, við sjáum að þar er talan -6858, það er núna gildið á %rdx
    16e5:	48 63 04 82          	movslq (%rdx,%rax,4),%rax	# hér eru ehv sjúklega skrítnir útreikningar 
									# $rax hefur gildi 4, afhverju? veit ekki 
									# þetta er þá -6858 + 16
									# útkoman úr því, sem ég hefði haldið að væri -6842,
									# er sett inn í %rax og sign extendað upp í quadword, 
									# úr þá, hefði ég haldið, 1110010101000110 yfir í
									# 11111111111111111110010101000110 en í raun og veru
									# verður %rax = -6759
									# ég skil ekki afhverju en ég treysti gdb
    16e9:	48 01 d0             	add    %rdx,%rax		# leggur nú %rdx við %rax og setur í %rax
    16ec:	3e ff e0             	notrack jmp *%rax		# hérna er svo stokkið upp að phase_3+(*%rax) eða 185
    16ef:	e8 21 05 00 00       	call   1c15 <explode_bomb>
    16f4:	eb db                	jmp    16d1 <phase_3+0x31>
    16f6:	b8 72 03 00 00       	mov    $0x372,%eax
    16fb:	2d c4 01 00 00       	sub    $0x1c4,%eax
    1700:	05 27 01 00 00       	add    $0x127,%eax
    1705:	2d 94 03 00 00       	sub    $0x394,%eax
    170a:	05 da 00 00 00       	add    $0xda,%eax		# 170a, bætum 218 við %eax
    170f:	2d 9f 03 00 00       	sub    $0x39f,%eax		# drögum 927 frá %eax
    1714:	05 9f 03 00 00       	add    $0x39f,%eax		# bætum 927 aftur við %eax
    1719:	2d 9f 03 00 00       	sub    $0x39f,%eax		# og drögum 927 aftur frá
    171e:	83 3c 24 05          	cmpl   $0x5,(%rsp)		# berum saman %rsp og 5
    1722:	7f 06                	jg     172a <phase_3+0x8a> 	# hoppa ef %rsp er > 5, destination explode
    1724:	39 44 24 04          	cmp    %eax,0x4(%rsp)		# berum saman %eax og annað stak í %rsp
									# notum gdb til að athuga gildi á %eax með x/d $eax
									# %eax = 709, þá eru komin gildin fyrir báðar tölur
    1728:	74 05                	je     172f <phase_3+0x8f>	# hoppa, ef gildin eru jöfn, og komast út
    172a:	e8 e6 04 00 00       	call   1c15 <explode_bomb>
    172f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1734:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    173b:	00 00 
    173d:	75 42                	jne    1781 <phase_3+0xe1>
    173f:	48 83 c4 18          	add    $0x18,%rsp
    1743:	c3                   	ret    
    1744:	b8 00 00 00 00       	mov    $0x0,%eax
    1749:	eb b0                	jmp    16fb <phase_3+0x5b>
    174b:	b8 00 00 00 00       	mov    $0x0,%eax
    1750:	eb ae                	jmp    1700 <phase_3+0x60>
    1752:	b8 00 00 00 00       	mov    $0x0,%eax
    1757:	eb ac                	jmp    1705 <phase_3+0x65>
    1759:	b8 00 00 00 00       	mov    $0x0,%eax		# hérna er phase_3 + 185, færum 0 inn í %eax
    175e:	eb aa                	jmp    170a <phase_3+0x6a>	# hoppum í 170a
    1760:	b8 00 00 00 00       	mov    $0x0,%eax
    1765:	eb a8                	jmp    170f <phase_3+0x6f>
    1767:	b8 00 00 00 00       	mov    $0x0,%eax
    176c:	eb a6                	jmp    1714 <phase_3+0x74>
    176e:	b8 00 00 00 00       	mov    $0x0,%eax
    1773:	eb a4                	jmp    1719 <phase_3+0x79>
    1775:	e8 9b 04 00 00       	call   1c15 <explode_bomb>
    177a:	b8 00 00 00 00       	mov    $0x0,%eax
    177f:	eb 9d                	jmp    171e <phase_3+0x7e>
    1781:	e8 da fa ff ff       	call   1260 <__stack_chk_fail@plt>

0000000000001786 <func4>:
    1786:	f3 0f 1e fa          	endbr64 
    178a:	48 83 ec 08          	sub    $0x8,%rsp
    178e:	89 d0                	mov    %edx,%eax
    1790:	29 f0                	sub    %esi,%eax
    1792:	89 c1                	mov    %eax,%ecx
    1794:	c1 e9 1f             	shr    $0x1f,%ecx
    1797:	01 c1                	add    %eax,%ecx
    1799:	d1 f9                	sar    %ecx
    179b:	01 f1                	add    %esi,%ecx
    179d:	39 f9                	cmp    %edi,%ecx
    179f:	7f 0c                	jg     17ad <func4+0x27>
    17a1:	b8 00 00 00 00       	mov    $0x0,%eax
    17a6:	7c 11                	jl     17b9 <func4+0x33>
    17a8:	48 83 c4 08          	add    $0x8,%rsp
    17ac:	c3                   	ret    
    17ad:	8d 51 ff             	lea    -0x1(%rcx),%edx
    17b0:	e8 d1 ff ff ff       	call   1786 <func4>
    17b5:	01 c0                	add    %eax,%eax
    17b7:	eb ef                	jmp    17a8 <func4+0x22>
    17b9:	8d 71 01             	lea    0x1(%rcx),%esi
    17bc:	e8 c5 ff ff ff       	call   1786 <func4>
    17c1:	8d 44 00 01          	lea    0x1(%rax,%rax,1),%eax
    17c5:	eb e1                	jmp    17a8 <func4+0x22>

00000000000017c7 <phase_4>:
    17c7:	f3 0f 1e fa          	endbr64 
    17cb:	48 83 ec 18          	sub    $0x18,%rsp
    17cf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    17d6:	00 00 
    17d8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    17dd:	31 c0                	xor    %eax,%eax
    17df:	48 8d 4c 24 04       	lea    0x4(%rsp),%rcx
    17e4:	48 89 e2             	mov    %rsp,%rdx
    17e7:	48 8d 35 41 1b 00 00 	lea    0x1b41(%rip),%rsi        # 332f <array.0+0x14f>
    17ee:	e8 2d fb ff ff       	call   1320 <__isoc99_sscanf@plt>
    17f3:	83 f8 02             	cmp    $0x2,%eax
    17f6:	75 06                	jne    17fe <phase_4+0x37>
    17f8:	83 3c 24 0e          	cmpl   $0xe,(%rsp)
    17fc:	76 05                	jbe    1803 <phase_4+0x3c>
    17fe:	e8 12 04 00 00       	call   1c15 <explode_bomb>
    1803:	ba 0e 00 00 00       	mov    $0xe,%edx
    1808:	be 00 00 00 00       	mov    $0x0,%esi
    180d:	8b 3c 24             	mov    (%rsp),%edi
    1810:	e8 71 ff ff ff       	call   1786 <func4>
    1815:	83 f8 03             	cmp    $0x3,%eax
    1818:	75 07                	jne    1821 <phase_4+0x5a>
    181a:	83 7c 24 04 03       	cmpl   $0x3,0x4(%rsp)
    181f:	74 05                	je     1826 <phase_4+0x5f>
    1821:	e8 ef 03 00 00       	call   1c15 <explode_bomb>
    1826:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    182b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    1832:	00 00 
    1834:	75 05                	jne    183b <phase_4+0x74>
    1836:	48 83 c4 18          	add    $0x18,%rsp
    183a:	c3                   	ret    
    183b:	e8 20 fa ff ff       	call   1260 <__stack_chk_fail@plt>

0000000000001840 <phase_5>:
    1840:	f3 0f 1e fa          	endbr64 
    1844:	53                   	push   %rbx
    1845:	48 89 fb             	mov    %rdi,%rbx
    1848:	e8 93 02 00 00       	call   1ae0 <string_length>
    184d:	83 f8 06             	cmp    $0x6,%eax
    1850:	75 2c                	jne    187e <phase_5+0x3e>
    1852:	48 89 d8             	mov    %rbx,%rax
    1855:	48 8d 7b 06          	lea    0x6(%rbx),%rdi
    1859:	b9 00 00 00 00       	mov    $0x0,%ecx
    185e:	48 8d 35 7b 19 00 00 	lea    0x197b(%rip),%rsi        # 31e0 <array.0>
    1865:	0f b6 10             	movzbl (%rax),%edx
    1868:	83 e2 0f             	and    $0xf,%edx
    186b:	03 0c 96             	add    (%rsi,%rdx,4),%ecx
    186e:	48 83 c0 01          	add    $0x1,%rax
    1872:	48 39 f8             	cmp    %rdi,%rax
    1875:	75 ee                	jne    1865 <phase_5+0x25>
    1877:	83 f9 3c             	cmp    $0x3c,%ecx
    187a:	75 09                	jne    1885 <phase_5+0x45>
    187c:	5b                   	pop    %rbx
    187d:	c3                   	ret    
    187e:	e8 92 03 00 00       	call   1c15 <explode_bomb>
    1883:	eb cd                	jmp    1852 <phase_5+0x12>
    1885:	e8 8b 03 00 00       	call   1c15 <explode_bomb>
    188a:	eb f0                	jmp    187c <phase_5+0x3c>

000000000000188c <phase_6>:
    188c:	f3 0f 1e fa          	endbr64 
    1890:	41 56                	push   %r14
    1892:	41 55                	push   %r13
    1894:	41 54                	push   %r12
    1896:	55                   	push   %rbp
    1897:	53                   	push   %rbx
    1898:	48 83 ec 60          	sub    $0x60,%rsp
    189c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    18a3:	00 00 
    18a5:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    18aa:	31 c0                	xor    %eax,%eax
    18ac:	49 89 e5             	mov    %rsp,%r13
    18af:	4c 89 ee             	mov    %r13,%rsi
    18b2:	e8 8a 03 00 00       	call   1c41 <read_six_numbers>
    18b7:	41 be 01 00 00 00    	mov    $0x1,%r14d
    18bd:	49 89 e4             	mov    %rsp,%r12
    18c0:	eb 28                	jmp    18ea <phase_6+0x5e>
    18c2:	e8 4e 03 00 00       	call   1c15 <explode_bomb>
    18c7:	eb 30                	jmp    18f9 <phase_6+0x6d>
    18c9:	48 83 c3 01          	add    $0x1,%rbx
    18cd:	83 fb 05             	cmp    $0x5,%ebx
    18d0:	7f 10                	jg     18e2 <phase_6+0x56>
    18d2:	41 8b 04 9c          	mov    (%r12,%rbx,4),%eax
    18d6:	39 45 00             	cmp    %eax,0x0(%rbp)
    18d9:	75 ee                	jne    18c9 <phase_6+0x3d>
    18db:	e8 35 03 00 00       	call   1c15 <explode_bomb>
    18e0:	eb e7                	jmp    18c9 <phase_6+0x3d>
    18e2:	49 83 c6 01          	add    $0x1,%r14
    18e6:	49 83 c5 04          	add    $0x4,%r13
    18ea:	4c 89 ed             	mov    %r13,%rbp
    18ed:	41 8b 45 00          	mov    0x0(%r13),%eax
    18f1:	83 e8 01             	sub    $0x1,%eax
    18f4:	83 f8 05             	cmp    $0x5,%eax
    18f7:	77 c9                	ja     18c2 <phase_6+0x36>
    18f9:	41 83 fe 05          	cmp    $0x5,%r14d
    18fd:	7f 05                	jg     1904 <phase_6+0x78>
    18ff:	4c 89 f3             	mov    %r14,%rbx
    1902:	eb ce                	jmp    18d2 <phase_6+0x46>
    1904:	be 00 00 00 00       	mov    $0x0,%esi
    1909:	8b 0c b4             	mov    (%rsp,%rsi,4),%ecx
    190c:	b8 01 00 00 00       	mov    $0x1,%eax
    1911:	48 8d 15 f8 38 00 00 	lea    0x38f8(%rip),%rdx        # 5210 <node1>
    1918:	83 f9 01             	cmp    $0x1,%ecx
    191b:	7e 0b                	jle    1928 <phase_6+0x9c>
    191d:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    1921:	83 c0 01             	add    $0x1,%eax
    1924:	39 c8                	cmp    %ecx,%eax
    1926:	75 f5                	jne    191d <phase_6+0x91>
    1928:	48 89 54 f4 20       	mov    %rdx,0x20(%rsp,%rsi,8)
    192d:	48 83 c6 01          	add    $0x1,%rsi
    1931:	48 83 fe 06          	cmp    $0x6,%rsi
    1935:	75 d2                	jne    1909 <phase_6+0x7d>
    1937:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
    193c:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    1941:	48 89 43 08          	mov    %rax,0x8(%rbx)
    1945:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    194a:	48 89 50 08          	mov    %rdx,0x8(%rax)
    194e:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    1953:	48 89 42 08          	mov    %rax,0x8(%rdx)
    1957:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    195c:	48 89 50 08          	mov    %rdx,0x8(%rax)
    1960:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    1965:	48 89 42 08          	mov    %rax,0x8(%rdx)
    1969:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    1970:	00 
    1971:	bd 05 00 00 00       	mov    $0x5,%ebp
    1976:	eb 09                	jmp    1981 <phase_6+0xf5>
    1978:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
    197c:	83 ed 01             	sub    $0x1,%ebp
    197f:	74 11                	je     1992 <phase_6+0x106>
    1981:	48 8b 43 08          	mov    0x8(%rbx),%rax
    1985:	8b 00                	mov    (%rax),%eax
    1987:	39 03                	cmp    %eax,(%rbx)
    1989:	7e ed                	jle    1978 <phase_6+0xec>
    198b:	e8 85 02 00 00       	call   1c15 <explode_bomb>
    1990:	eb e6                	jmp    1978 <phase_6+0xec>
    1992:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    1997:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    199e:	00 00 
    19a0:	75 0d                	jne    19af <phase_6+0x123>
    19a2:	48 83 c4 60          	add    $0x60,%rsp
    19a6:	5b                   	pop    %rbx
    19a7:	5d                   	pop    %rbp
    19a8:	41 5c                	pop    %r12
    19aa:	41 5d                	pop    %r13
    19ac:	41 5e                	pop    %r14
    19ae:	c3                   	ret    
    19af:	e8 ac f8 ff ff       	call   1260 <__stack_chk_fail@plt>

00000000000019b4 <fun7>:
    19b4:	f3 0f 1e fa          	endbr64 
    19b8:	48 85 ff             	test   %rdi,%rdi
    19bb:	74 32                	je     19ef <fun7+0x3b>
    19bd:	48 83 ec 08          	sub    $0x8,%rsp
    19c1:	8b 17                	mov    (%rdi),%edx
    19c3:	39 f2                	cmp    %esi,%edx
    19c5:	7f 0c                	jg     19d3 <fun7+0x1f>
    19c7:	b8 00 00 00 00       	mov    $0x0,%eax
    19cc:	75 12                	jne    19e0 <fun7+0x2c>
    19ce:	48 83 c4 08          	add    $0x8,%rsp
    19d2:	c3                   	ret    
    19d3:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    19d7:	e8 d8 ff ff ff       	call   19b4 <fun7>
    19dc:	01 c0                	add    %eax,%eax
    19de:	eb ee                	jmp    19ce <fun7+0x1a>
    19e0:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    19e4:	e8 cb ff ff ff       	call   19b4 <fun7>
    19e9:	8d 44 00 01          	lea    0x1(%rax,%rax,1),%eax
    19ed:	eb df                	jmp    19ce <fun7+0x1a>
    19ef:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    19f4:	c3                   	ret    

00000000000019f5 <secret_phase>:
    19f5:	f3 0f 1e fa          	endbr64 
    19f9:	53                   	push   %rbx
    19fa:	e8 87 02 00 00       	call   1c86 <read_line>
    19ff:	48 89 c7             	mov    %rax,%rdi
    1a02:	ba 0a 00 00 00       	mov    $0xa,%edx
    1a07:	be 00 00 00 00       	mov    $0x0,%esi
    1a0c:	e8 ef f8 ff ff       	call   1300 <strtol@plt>
    1a11:	89 c3                	mov    %eax,%ebx
    1a13:	83 e8 01             	sub    $0x1,%eax
    1a16:	3d e8 03 00 00       	cmp    $0x3e8,%eax
    1a1b:	77 26                	ja     1a43 <secret_phase+0x4e>
    1a1d:	89 de                	mov    %ebx,%esi
    1a1f:	48 8d 3d 0a 37 00 00 	lea    0x370a(%rip),%rdi        # 5130 <n1>
    1a26:	e8 89 ff ff ff       	call   19b4 <fun7>
    1a2b:	83 f8 04             	cmp    $0x4,%eax
    1a2e:	75 1a                	jne    1a4a <secret_phase+0x55>
    1a30:	48 8d 3d 49 17 00 00 	lea    0x1749(%rip),%rdi        # 3180 <_IO_stdin_used+0x180>
    1a37:	e8 f4 f7 ff ff       	call   1230 <puts@plt>
    1a3c:	e8 7d 03 00 00       	call   1dbe <phase_defused>
    1a41:	5b                   	pop    %rbx
    1a42:	c3                   	ret    
    1a43:	e8 cd 01 00 00       	call   1c15 <explode_bomb>
    1a48:	eb d3                	jmp    1a1d <secret_phase+0x28>
    1a4a:	e8 c6 01 00 00       	call   1c15 <explode_bomb>
    1a4f:	eb df                	jmp    1a30 <secret_phase+0x3b>

0000000000001a51 <sig_handler>:
    1a51:	f3 0f 1e fa          	endbr64 
    1a55:	50                   	push   %rax
    1a56:	58                   	pop    %rax
    1a57:	48 83 ec 08          	sub    $0x8,%rsp
    1a5b:	48 8d 3d be 17 00 00 	lea    0x17be(%rip),%rdi        # 3220 <array.0+0x40>
    1a62:	e8 c9 f7 ff ff       	call   1230 <puts@plt>
    1a67:	bf 03 00 00 00       	mov    $0x3,%edi
    1a6c:	e8 0f f9 ff ff       	call   1380 <sleep@plt>
    1a71:	48 8d 35 6a 18 00 00 	lea    0x186a(%rip),%rsi        # 32e2 <array.0+0x102>
    1a78:	bf 01 00 00 00       	mov    $0x1,%edi
    1a7d:	b8 00 00 00 00       	mov    $0x0,%eax
    1a82:	e8 a9 f8 ff ff       	call   1330 <__printf_chk@plt>
    1a87:	48 8b 3d d2 3b 00 00 	mov    0x3bd2(%rip),%rdi        # 5660 <stdout@GLIBC_2.2.5>
    1a8e:	e8 7d f8 ff ff       	call   1310 <fflush@plt>
    1a93:	bf 01 00 00 00       	mov    $0x1,%edi
    1a98:	e8 e3 f8 ff ff       	call   1380 <sleep@plt>
    1a9d:	48 8d 3d 46 18 00 00 	lea    0x1846(%rip),%rdi        # 32ea <array.0+0x10a>
    1aa4:	e8 87 f7 ff ff       	call   1230 <puts@plt>
    1aa9:	bf 10 00 00 00       	mov    $0x10,%edi
    1aae:	e8 9d f8 ff ff       	call   1350 <exit@plt>

0000000000001ab3 <invalid_phase>:
    1ab3:	f3 0f 1e fa          	endbr64 
    1ab7:	50                   	push   %rax
    1ab8:	58                   	pop    %rax
    1ab9:	48 83 ec 08          	sub    $0x8,%rsp
    1abd:	48 89 fa             	mov    %rdi,%rdx
    1ac0:	48 8d 35 2b 18 00 00 	lea    0x182b(%rip),%rsi        # 32f2 <array.0+0x112>
    1ac7:	bf 01 00 00 00       	mov    $0x1,%edi
    1acc:	b8 00 00 00 00       	mov    $0x0,%eax
    1ad1:	e8 5a f8 ff ff       	call   1330 <__printf_chk@plt>
    1ad6:	bf 08 00 00 00       	mov    $0x8,%edi
    1adb:	e8 70 f8 ff ff       	call   1350 <exit@plt>

0000000000001ae0 <string_length>:
    1ae0:	f3 0f 1e fa          	endbr64 
    1ae4:	80 3f 00             	cmpb   $0x0,(%rdi)
    1ae7:	74 12                	je     1afb <string_length+0x1b>
    1ae9:	b8 00 00 00 00       	mov    $0x0,%eax
    1aee:	48 83 c7 01          	add    $0x1,%rdi
    1af2:	83 c0 01             	add    $0x1,%eax
    1af5:	80 3f 00             	cmpb   $0x0,(%rdi)
    1af8:	75 f4                	jne    1aee <string_length+0xe>
    1afa:	c3                   	ret    
    1afb:	b8 00 00 00 00       	mov    $0x0,%eax
    1b00:	c3                   	ret    

0000000000001b01 <strings_not_equal>:
    1b01:	f3 0f 1e fa          	endbr64 
    1b05:	41 54                	push   %r12
    1b07:	55                   	push   %rbp
    1b08:	53                   	push   %rbx
    1b09:	48 89 fb             	mov    %rdi,%rbx
    1b0c:	48 89 f5             	mov    %rsi,%rbp
    1b0f:	e8 cc ff ff ff       	call   1ae0 <string_length>
    1b14:	41 89 c4             	mov    %eax,%r12d
    1b17:	48 89 ef             	mov    %rbp,%rdi
    1b1a:	e8 c1 ff ff ff       	call   1ae0 <string_length>
    1b1f:	89 c2                	mov    %eax,%edx
    1b21:	b8 01 00 00 00       	mov    $0x1,%eax
    1b26:	41 39 d4             	cmp    %edx,%r12d
    1b29:	75 31                	jne    1b5c <strings_not_equal+0x5b>
    1b2b:	0f b6 13             	movzbl (%rbx),%edx
    1b2e:	84 d2                	test   %dl,%dl
    1b30:	74 1e                	je     1b50 <strings_not_equal+0x4f>
    1b32:	b8 00 00 00 00       	mov    $0x0,%eax
    1b37:	38 54 05 00          	cmp    %dl,0x0(%rbp,%rax,1)
    1b3b:	75 1a                	jne    1b57 <strings_not_equal+0x56>
    1b3d:	48 83 c0 01          	add    $0x1,%rax
    1b41:	0f b6 14 03          	movzbl (%rbx,%rax,1),%edx
    1b45:	84 d2                	test   %dl,%dl
    1b47:	75 ee                	jne    1b37 <strings_not_equal+0x36>
    1b49:	b8 00 00 00 00       	mov    $0x0,%eax
    1b4e:	eb 0c                	jmp    1b5c <strings_not_equal+0x5b>
    1b50:	b8 00 00 00 00       	mov    $0x0,%eax
    1b55:	eb 05                	jmp    1b5c <strings_not_equal+0x5b>
    1b57:	b8 01 00 00 00       	mov    $0x1,%eax
    1b5c:	5b                   	pop    %rbx
    1b5d:	5d                   	pop    %rbp
    1b5e:	41 5c                	pop    %r12
    1b60:	c3                   	ret    

0000000000001b61 <initialize_bomb>:
    1b61:	f3 0f 1e fa          	endbr64 
    1b65:	48 83 ec 08          	sub    $0x8,%rsp
    1b69:	48 8d 35 e1 fe ff ff 	lea    -0x11f(%rip),%rsi        # 1a51 <sig_handler>
    1b70:	bf 02 00 00 00       	mov    $0x2,%edi
    1b75:	e8 56 f7 ff ff       	call   12d0 <signal@plt>
    1b7a:	48 83 c4 08          	add    $0x8,%rsp
    1b7e:	c3                   	ret    

0000000000001b7f <initialize_bomb_solve>:
    1b7f:	f3 0f 1e fa          	endbr64 
    1b83:	c3                   	ret    

0000000000001b84 <blank_line>:
    1b84:	f3 0f 1e fa          	endbr64 
    1b88:	55                   	push   %rbp
    1b89:	53                   	push   %rbx
    1b8a:	48 83 ec 08          	sub    $0x8,%rsp
    1b8e:	48 89 fd             	mov    %rdi,%rbp
    1b91:	0f b6 5d 00          	movzbl 0x0(%rbp),%ebx
    1b95:	84 db                	test   %bl,%bl
    1b97:	74 1e                	je     1bb7 <blank_line+0x33>
    1b99:	e8 f2 f7 ff ff       	call   1390 <__ctype_b_loc@plt>
    1b9e:	48 83 c5 01          	add    $0x1,%rbp
    1ba2:	48 0f be db          	movsbq %bl,%rbx
    1ba6:	48 8b 00             	mov    (%rax),%rax
    1ba9:	f6 44 58 01 20       	testb  $0x20,0x1(%rax,%rbx,2)
    1bae:	75 e1                	jne    1b91 <blank_line+0xd>
    1bb0:	b8 00 00 00 00       	mov    $0x0,%eax
    1bb5:	eb 05                	jmp    1bbc <blank_line+0x38>
    1bb7:	b8 01 00 00 00       	mov    $0x1,%eax
    1bbc:	48 83 c4 08          	add    $0x8,%rsp
    1bc0:	5b                   	pop    %rbx
    1bc1:	5d                   	pop    %rbp
    1bc2:	c3                   	ret    

0000000000001bc3 <skip>:
    1bc3:	f3 0f 1e fa          	endbr64 
    1bc7:	55                   	push   %rbp
    1bc8:	53                   	push   %rbx
    1bc9:	48 83 ec 08          	sub    $0x8,%rsp
    1bcd:	48 8d 2d 2c 3b 00 00 	lea    0x3b2c(%rip),%rbp        # 5700 <input_strings>
    1bd4:	48 63 05 15 3b 00 00 	movslq 0x3b15(%rip),%rax        # 56f0 <num_input_strings>
    1bdb:	48 8d 3c 80          	lea    (%rax,%rax,4),%rdi
    1bdf:	48 c1 e7 04          	shl    $0x4,%rdi
    1be3:	48 01 ef             	add    %rbp,%rdi
    1be6:	48 8b 15 a3 3a 00 00 	mov    0x3aa3(%rip),%rdx        # 5690 <infile>
    1bed:	be 50 00 00 00       	mov    $0x50,%esi
    1bf2:	e8 b9 f6 ff ff       	call   12b0 <fgets@plt>
    1bf7:	48 89 c3             	mov    %rax,%rbx
    1bfa:	48 85 c0             	test   %rax,%rax
    1bfd:	74 0c                	je     1c0b <skip+0x48>
    1bff:	48 89 c7             	mov    %rax,%rdi
    1c02:	e8 7d ff ff ff       	call   1b84 <blank_line>
    1c07:	85 c0                	test   %eax,%eax
    1c09:	75 c9                	jne    1bd4 <skip+0x11>
    1c0b:	48 89 d8             	mov    %rbx,%rax
    1c0e:	48 83 c4 08          	add    $0x8,%rsp
    1c12:	5b                   	pop    %rbx
    1c13:	5d                   	pop    %rbp
    1c14:	c3                   	ret    

0000000000001c15 <explode_bomb>:
    1c15:	f3 0f 1e fa          	endbr64 
    1c19:	50                   	push   %rax
    1c1a:	58                   	pop    %rax
    1c1b:	48 83 ec 08          	sub    $0x8,%rsp
    1c1f:	48 8d 3d dd 16 00 00 	lea    0x16dd(%rip),%rdi        # 3303 <array.0+0x123>
    1c26:	e8 05 f6 ff ff       	call   1230 <puts@plt>
    1c2b:	48 8d 3d da 16 00 00 	lea    0x16da(%rip),%rdi        # 330c <array.0+0x12c>
    1c32:	e8 f9 f5 ff ff       	call   1230 <puts@plt>
    1c37:	bf 08 00 00 00       	mov    $0x8,%edi
    1c3c:	e8 0f f7 ff ff       	call   1350 <exit@plt>

0000000000001c41 <read_six_numbers>:
    1c41:	f3 0f 1e fa          	endbr64 
    1c45:	48 83 ec 08          	sub    $0x8,%rsp
    1c49:	48 89 f2             	mov    %rsi,%rdx
    1c4c:	48 8d 4e 04          	lea    0x4(%rsi),%rcx
    1c50:	48 8d 46 14          	lea    0x14(%rsi),%rax
    1c54:	50                   	push   %rax
    1c55:	48 8d 46 10          	lea    0x10(%rsi),%rax
    1c59:	50                   	push   %rax
    1c5a:	4c 8d 4e 0c          	lea    0xc(%rsi),%r9
    1c5e:	4c 8d 46 08          	lea    0x8(%rsi),%r8
    1c62:	48 8d 35 ba 16 00 00 	lea    0x16ba(%rip),%rsi        # 3323 <array.0+0x143>
    1c69:	b8 00 00 00 00       	mov    $0x0,%eax
    1c6e:	e8 ad f6 ff ff       	call   1320 <__isoc99_sscanf@plt>
    1c73:	48 83 c4 10          	add    $0x10,%rsp
    1c77:	83 f8 05             	cmp    $0x5,%eax
    1c7a:	7e 05                	jle    1c81 <read_six_numbers+0x40>
    1c7c:	48 83 c4 08          	add    $0x8,%rsp
    1c80:	c3                   	ret    
    1c81:	e8 8f ff ff ff       	call   1c15 <explode_bomb>

0000000000001c86 <read_line>:
    1c86:	f3 0f 1e fa          	endbr64 
    1c8a:	55                   	push   %rbp
    1c8b:	53                   	push   %rbx
    1c8c:	48 83 ec 08          	sub    $0x8,%rsp
    1c90:	b8 00 00 00 00       	mov    $0x0,%eax
    1c95:	e8 29 ff ff ff       	call   1bc3 <skip>
    1c9a:	48 85 c0             	test   %rax,%rax
    1c9d:	74 5d                	je     1cfc <read_line+0x76>
    1c9f:	8b 2d 4b 3a 00 00    	mov    0x3a4b(%rip),%ebp        # 56f0 <num_input_strings>
    1ca5:	48 63 c5             	movslq %ebp,%rax
    1ca8:	48 8d 1c 80          	lea    (%rax,%rax,4),%rbx
    1cac:	48 c1 e3 04          	shl    $0x4,%rbx
    1cb0:	48 8d 05 49 3a 00 00 	lea    0x3a49(%rip),%rax        # 5700 <input_strings>
    1cb7:	48 01 c3             	add    %rax,%rbx
    1cba:	48 89 df             	mov    %rbx,%rdi
    1cbd:	e8 8e f5 ff ff       	call   1250 <strlen@plt>
    1cc2:	83 f8 4e             	cmp    $0x4e,%eax
    1cc5:	0f 8f a9 00 00 00    	jg     1d74 <read_line+0xee>
    1ccb:	83 e8 01             	sub    $0x1,%eax
    1cce:	48 98                	cltq   
    1cd0:	48 63 d5             	movslq %ebp,%rdx
    1cd3:	48 8d 0c 92          	lea    (%rdx,%rdx,4),%rcx
    1cd7:	48 c1 e1 04          	shl    $0x4,%rcx
    1cdb:	48 8d 15 1e 3a 00 00 	lea    0x3a1e(%rip),%rdx        # 5700 <input_strings>
    1ce2:	48 01 ca             	add    %rcx,%rdx
    1ce5:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
    1ce9:	83 c5 01             	add    $0x1,%ebp
    1cec:	89 2d fe 39 00 00    	mov    %ebp,0x39fe(%rip)        # 56f0 <num_input_strings>
    1cf2:	48 89 d8             	mov    %rbx,%rax
    1cf5:	48 83 c4 08          	add    $0x8,%rsp
    1cf9:	5b                   	pop    %rbx
    1cfa:	5d                   	pop    %rbp
    1cfb:	c3                   	ret    
    1cfc:	48 8b 05 6d 39 00 00 	mov    0x396d(%rip),%rax        # 5670 <stdin@GLIBC_2.2.5>
    1d03:	48 39 05 86 39 00 00 	cmp    %rax,0x3986(%rip)        # 5690 <infile>
    1d0a:	74 1b                	je     1d27 <read_line+0xa1>
    1d0c:	48 8d 3d 40 16 00 00 	lea    0x1640(%rip),%rdi        # 3353 <array.0+0x173>
    1d13:	e8 e8 f4 ff ff       	call   1200 <getenv@plt>
    1d18:	48 85 c0             	test   %rax,%rax
    1d1b:	74 20                	je     1d3d <read_line+0xb7>
    1d1d:	bf 00 00 00 00       	mov    $0x0,%edi
    1d22:	e8 29 f6 ff ff       	call   1350 <exit@plt>
    1d27:	48 8d 3d 07 16 00 00 	lea    0x1607(%rip),%rdi        # 3335 <array.0+0x155>
    1d2e:	e8 fd f4 ff ff       	call   1230 <puts@plt>
    1d33:	bf 08 00 00 00       	mov    $0x8,%edi
    1d38:	e8 13 f6 ff ff       	call   1350 <exit@plt>
    1d3d:	48 8b 05 2c 39 00 00 	mov    0x392c(%rip),%rax        # 5670 <stdin@GLIBC_2.2.5>
    1d44:	48 89 05 45 39 00 00 	mov    %rax,0x3945(%rip)        # 5690 <infile>
    1d4b:	b8 00 00 00 00       	mov    $0x0,%eax
    1d50:	e8 6e fe ff ff       	call   1bc3 <skip>
    1d55:	48 85 c0             	test   %rax,%rax
    1d58:	0f 85 41 ff ff ff    	jne    1c9f <read_line+0x19>
    1d5e:	48 8d 3d d0 15 00 00 	lea    0x15d0(%rip),%rdi        # 3335 <array.0+0x155>
    1d65:	e8 c6 f4 ff ff       	call   1230 <puts@plt>
    1d6a:	bf 00 00 00 00       	mov    $0x0,%edi
    1d6f:	e8 dc f5 ff ff       	call   1350 <exit@plt>
    1d74:	48 8d 3d e3 15 00 00 	lea    0x15e3(%rip),%rdi        # 335e <array.0+0x17e>
    1d7b:	e8 b0 f4 ff ff       	call   1230 <puts@plt>
    1d80:	8b 05 6a 39 00 00    	mov    0x396a(%rip),%eax        # 56f0 <num_input_strings>
    1d86:	8d 50 01             	lea    0x1(%rax),%edx
    1d89:	89 15 61 39 00 00    	mov    %edx,0x3961(%rip)        # 56f0 <num_input_strings>
    1d8f:	48 98                	cltq   
    1d91:	48 6b c0 50          	imul   $0x50,%rax,%rax
    1d95:	48 8d 15 64 39 00 00 	lea    0x3964(%rip),%rdx        # 5700 <input_strings>
    1d9c:	48 be 2a 2a 2a 74 72 	movabs $0x636e7572742a2a2a,%rsi
    1da3:	75 6e 63 
    1da6:	48 bf 61 74 65 64 2a 	movabs $0x2a2a2a64657461,%rdi
    1dad:	2a 2a 00 
    1db0:	48 89 34 02          	mov    %rsi,(%rdx,%rax,1)
    1db4:	48 89 7c 02 08       	mov    %rdi,0x8(%rdx,%rax,1)
    1db9:	e8 57 fe ff ff       	call   1c15 <explode_bomb>

0000000000001dbe <phase_defused>:
    1dbe:	f3 0f 1e fa          	endbr64 
    1dc2:	48 83 ec 78          	sub    $0x78,%rsp
    1dc6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1dcd:	00 00 
    1dcf:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    1dd4:	31 c0                	xor    %eax,%eax
    1dd6:	83 3d 13 39 00 00 06 	cmpl   $0x6,0x3913(%rip)        # 56f0 <num_input_strings>
    1ddd:	74 15                	je     1df4 <phase_defused+0x36>
    1ddf:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    1de4:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    1deb:	00 00 
    1ded:	75 73                	jne    1e62 <phase_defused+0xa4>
    1def:	48 83 c4 78          	add    $0x78,%rsp
    1df3:	c3                   	ret    
    1df4:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
    1df9:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    1dfe:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    1e03:	48 8d 35 6f 15 00 00 	lea    0x156f(%rip),%rsi        # 3379 <array.0+0x199>
    1e0a:	48 8d 3d df 39 00 00 	lea    0x39df(%rip),%rdi        # 57f0 <input_strings+0xf0>
    1e11:	e8 0a f5 ff ff       	call   1320 <__isoc99_sscanf@plt>
    1e16:	83 f8 03             	cmp    $0x3,%eax
    1e19:	74 0e                	je     1e29 <phase_defused+0x6b>
    1e1b:	48 8d 3d 96 14 00 00 	lea    0x1496(%rip),%rdi        # 32b8 <array.0+0xd8>
    1e22:	e8 09 f4 ff ff       	call   1230 <puts@plt>
    1e27:	eb b6                	jmp    1ddf <phase_defused+0x21>
    1e29:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    1e2e:	48 8d 35 4d 15 00 00 	lea    0x154d(%rip),%rsi        # 3382 <array.0+0x1a2>
    1e35:	e8 c7 fc ff ff       	call   1b01 <strings_not_equal>
    1e3a:	85 c0                	test   %eax,%eax
    1e3c:	75 dd                	jne    1e1b <phase_defused+0x5d>
    1e3e:	48 8d 3d 13 14 00 00 	lea    0x1413(%rip),%rdi        # 3258 <array.0+0x78>
    1e45:	e8 e6 f3 ff ff       	call   1230 <puts@plt>
    1e4a:	48 8d 3d 2f 14 00 00 	lea    0x142f(%rip),%rdi        # 3280 <array.0+0xa0>
    1e51:	e8 da f3 ff ff       	call   1230 <puts@plt>
    1e56:	b8 00 00 00 00       	mov    $0x0,%eax
    1e5b:	e8 95 fb ff ff       	call   19f5 <secret_phase>
    1e60:	eb b9                	jmp    1e1b <phase_defused+0x5d>
    1e62:	e8 f9 f3 ff ff       	call   1260 <__stack_chk_fail@plt>

0000000000001e67 <sigalrm_handler>:
    1e67:	f3 0f 1e fa          	endbr64 
    1e6b:	50                   	push   %rax
    1e6c:	58                   	pop    %rax
    1e6d:	48 83 ec 08          	sub    $0x8,%rsp
    1e71:	b9 00 00 00 00       	mov    $0x0,%ecx
    1e76:	48 8d 15 73 15 00 00 	lea    0x1573(%rip),%rdx        # 33f0 <array.0+0x210>
    1e7d:	be 01 00 00 00       	mov    $0x1,%esi
    1e82:	48 8b 3d f7 37 00 00 	mov    0x37f7(%rip),%rdi        # 5680 <stderr@GLIBC_2.2.5>
    1e89:	b8 00 00 00 00       	mov    $0x0,%eax
    1e8e:	e8 dd f4 ff ff       	call   1370 <__fprintf_chk@plt>
    1e93:	bf 01 00 00 00       	mov    $0x1,%edi
    1e98:	e8 b3 f4 ff ff       	call   1350 <exit@plt>

0000000000001e9d <rio_readlineb>:
    1e9d:	41 56                	push   %r14
    1e9f:	41 55                	push   %r13
    1ea1:	41 54                	push   %r12
    1ea3:	55                   	push   %rbp
    1ea4:	53                   	push   %rbx
    1ea5:	49 89 f4             	mov    %rsi,%r12
    1ea8:	48 83 fa 01          	cmp    $0x1,%rdx
    1eac:	0f 86 92 00 00 00    	jbe    1f44 <rio_readlineb+0xa7>
    1eb2:	48 89 fb             	mov    %rdi,%rbx
    1eb5:	4c 8d 74 16 ff       	lea    -0x1(%rsi,%rdx,1),%r14
    1eba:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    1ec0:	48 8d 6f 10          	lea    0x10(%rdi),%rbp
    1ec4:	eb 56                	jmp    1f1c <rio_readlineb+0x7f>
    1ec6:	e8 45 f3 ff ff       	call   1210 <__errno_location@plt>
    1ecb:	83 38 04             	cmpl   $0x4,(%rax)
    1ece:	75 55                	jne    1f25 <rio_readlineb+0x88>
    1ed0:	ba 00 20 00 00       	mov    $0x2000,%edx
    1ed5:	48 89 ee             	mov    %rbp,%rsi
    1ed8:	8b 3b                	mov    (%rbx),%edi
    1eda:	e8 c1 f3 ff ff       	call   12a0 <read@plt>
    1edf:	89 c2                	mov    %eax,%edx
    1ee1:	89 43 04             	mov    %eax,0x4(%rbx)
    1ee4:	85 c0                	test   %eax,%eax
    1ee6:	78 de                	js     1ec6 <rio_readlineb+0x29>
    1ee8:	85 c0                	test   %eax,%eax
    1eea:	74 42                	je     1f2e <rio_readlineb+0x91>
    1eec:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
    1ef0:	48 8b 43 08          	mov    0x8(%rbx),%rax
    1ef4:	0f b6 08             	movzbl (%rax),%ecx
    1ef7:	48 83 c0 01          	add    $0x1,%rax
    1efb:	48 89 43 08          	mov    %rax,0x8(%rbx)
    1eff:	83 ea 01             	sub    $0x1,%edx
    1f02:	89 53 04             	mov    %edx,0x4(%rbx)
    1f05:	49 83 c4 01          	add    $0x1,%r12
    1f09:	41 88 4c 24 ff       	mov    %cl,-0x1(%r12)
    1f0e:	80 f9 0a             	cmp    $0xa,%cl
    1f11:	74 3c                	je     1f4f <rio_readlineb+0xb2>
    1f13:	41 83 c5 01          	add    $0x1,%r13d
    1f17:	4d 39 f4             	cmp    %r14,%r12
    1f1a:	74 30                	je     1f4c <rio_readlineb+0xaf>
    1f1c:	8b 53 04             	mov    0x4(%rbx),%edx
    1f1f:	85 d2                	test   %edx,%edx
    1f21:	7e ad                	jle    1ed0 <rio_readlineb+0x33>
    1f23:	eb cb                	jmp    1ef0 <rio_readlineb+0x53>
    1f25:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    1f2c:	eb 05                	jmp    1f33 <rio_readlineb+0x96>
    1f2e:	b8 00 00 00 00       	mov    $0x0,%eax
    1f33:	85 c0                	test   %eax,%eax
    1f35:	75 29                	jne    1f60 <rio_readlineb+0xc3>
    1f37:	b8 00 00 00 00       	mov    $0x0,%eax
    1f3c:	41 83 fd 01          	cmp    $0x1,%r13d
    1f40:	75 0d                	jne    1f4f <rio_readlineb+0xb2>
    1f42:	eb 13                	jmp    1f57 <rio_readlineb+0xba>
    1f44:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    1f4a:	eb 03                	jmp    1f4f <rio_readlineb+0xb2>
    1f4c:	4d 89 f4             	mov    %r14,%r12
    1f4f:	41 c6 04 24 00       	movb   $0x0,(%r12)
    1f54:	49 63 c5             	movslq %r13d,%rax
    1f57:	5b                   	pop    %rbx
    1f58:	5d                   	pop    %rbp
    1f59:	41 5c                	pop    %r12
    1f5b:	41 5d                	pop    %r13
    1f5d:	41 5e                	pop    %r14
    1f5f:	c3                   	ret    
    1f60:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    1f67:	eb ee                	jmp    1f57 <rio_readlineb+0xba>

0000000000001f69 <submitr>:
    1f69:	f3 0f 1e fa          	endbr64 
    1f6d:	41 57                	push   %r15
    1f6f:	41 56                	push   %r14
    1f71:	41 55                	push   %r13
    1f73:	41 54                	push   %r12
    1f75:	55                   	push   %rbp
    1f76:	53                   	push   %rbx
    1f77:	4c 8d 9c 24 00 e0 fe 	lea    -0x12000(%rsp),%r11
    1f7e:	ff 
    1f7f:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    1f86:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    1f8b:	4c 39 dc             	cmp    %r11,%rsp
    1f8e:	75 ef                	jne    1f7f <submitr+0x16>
    1f90:	48 83 ec 78          	sub    $0x78,%rsp
    1f94:	49 89 fd             	mov    %rdi,%r13
    1f97:	89 f5                	mov    %esi,%ebp
    1f99:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    1f9e:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    1fa3:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    1fa8:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
    1fad:	48 8b 9c 24 b0 20 01 	mov    0x120b0(%rsp),%rbx
    1fb4:	00 
    1fb5:	4c 8b bc 24 b8 20 01 	mov    0x120b8(%rsp),%r15
    1fbc:	00 
    1fbd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1fc4:	00 00 
    1fc6:	48 89 84 24 68 20 01 	mov    %rax,0x12068(%rsp)
    1fcd:	00 
    1fce:	31 c0                	xor    %eax,%eax
    1fd0:	c7 44 24 3c 00 00 00 	movl   $0x0,0x3c(%rsp)
    1fd7:	00 
    1fd8:	ba 00 00 00 00       	mov    $0x0,%edx
    1fdd:	be 01 00 00 00       	mov    $0x1,%esi
    1fe2:	bf 02 00 00 00       	mov    $0x2,%edi
    1fe7:	e8 c4 f3 ff ff       	call   13b0 <socket@plt>
    1fec:	85 c0                	test   %eax,%eax
    1fee:	0f 88 11 01 00 00    	js     2105 <submitr+0x19c>
    1ff4:	41 89 c4             	mov    %eax,%r12d
    1ff7:	4c 89 ef             	mov    %r13,%rdi
    1ffa:	e8 e1 f2 ff ff       	call   12e0 <gethostbyname@plt>
    1fff:	48 85 c0             	test   %rax,%rax
    2002:	0f 84 4d 01 00 00    	je     2155 <submitr+0x1ec>
    2008:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
    200d:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    2014:	00 00 
    2016:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
    201d:	00 00 
    201f:	66 c7 44 24 40 02 00 	movw   $0x2,0x40(%rsp)
    2026:	48 63 50 14          	movslq 0x14(%rax),%rdx
    202a:	48 8b 40 18          	mov    0x18(%rax),%rax
    202e:	48 8d 7c 24 44       	lea    0x44(%rsp),%rdi
    2033:	b9 0c 00 00 00       	mov    $0xc,%ecx
    2038:	48 8b 30             	mov    (%rax),%rsi
    203b:	e8 b0 f2 ff ff       	call   12f0 <__memmove_chk@plt>
    2040:	66 c1 c5 08          	rol    $0x8,%bp
    2044:	66 89 6c 24 42       	mov    %bp,0x42(%rsp)
    2049:	ba 10 00 00 00       	mov    $0x10,%edx
    204e:	4c 89 ee             	mov    %r13,%rsi
    2051:	44 89 e7             	mov    %r12d,%edi
    2054:	e8 07 f3 ff ff       	call   1360 <connect@plt>
    2059:	85 c0                	test   %eax,%eax
    205b:	0f 88 5f 01 00 00    	js     21c0 <submitr+0x257>
    2061:	48 89 df             	mov    %rbx,%rdi
    2064:	e8 e7 f1 ff ff       	call   1250 <strlen@plt>
    2069:	48 89 c5             	mov    %rax,%rbp
    206c:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    2071:	e8 da f1 ff ff       	call   1250 <strlen@plt>
    2076:	49 89 c6             	mov    %rax,%r14
    2079:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    207e:	e8 cd f1 ff ff       	call   1250 <strlen@plt>
    2083:	49 89 c5             	mov    %rax,%r13
    2086:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    208b:	e8 c0 f1 ff ff       	call   1250 <strlen@plt>
    2090:	48 89 c2             	mov    %rax,%rdx
    2093:	4b 8d 84 2e 80 00 00 	lea    0x80(%r14,%r13,1),%rax
    209a:	00 
    209b:	48 01 d0             	add    %rdx,%rax
    209e:	48 8d 54 6d 00       	lea    0x0(%rbp,%rbp,2),%rdx
    20a3:	48 01 d0             	add    %rdx,%rax
    20a6:	48 3d 00 40 00 00    	cmp    $0x4000,%rax
    20ac:	0f 87 6b 01 00 00    	ja     221d <submitr+0x2b4>
    20b2:	48 8d bc 24 60 60 00 	lea    0x6060(%rsp),%rdi
    20b9:	00 
    20ba:	ba 00 40 00 00       	mov    $0x4000,%edx
    20bf:	be 00 00 00 00       	mov    $0x0,%esi
    20c4:	e8 a7 f1 ff ff       	call   1270 <memset@plt>
    20c9:	48 89 df             	mov    %rbx,%rdi
    20cc:	e8 7f f1 ff ff       	call   1250 <strlen@plt>
    20d1:	85 c0                	test   %eax,%eax
    20d3:	0f 84 07 05 00 00    	je     25e0 <submitr+0x677>
    20d9:	8d 40 ff             	lea    -0x1(%rax),%eax
    20dc:	4c 8d 6c 03 01       	lea    0x1(%rbx,%rax,1),%r13
    20e1:	48 8d ac 24 60 60 00 	lea    0x6060(%rsp),%rbp
    20e8:	00 
    20e9:	48 8d 84 24 60 e0 00 	lea    0xe060(%rsp),%rax
    20f0:	00 
    20f1:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    20f6:	49 be d9 ff 00 00 00 	movabs $0x2000000000ffd9,%r14
    20fd:	00 20 00 
    2100:	e9 a6 01 00 00       	jmp    22ab <submitr+0x342>
    2105:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
    210c:	3a 20 43 
    210f:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
    2116:	20 75 6e 
    2119:	49 89 07             	mov    %rax,(%r15)
    211c:	49 89 57 08          	mov    %rdx,0x8(%r15)
    2120:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    2127:	74 6f 20 
    212a:	48 ba 63 72 65 61 74 	movabs $0x7320657461657263,%rdx
    2131:	65 20 73 
    2134:	49 89 47 10          	mov    %rax,0x10(%r15)
    2138:	49 89 57 18          	mov    %rdx,0x18(%r15)
    213c:	41 c7 47 20 6f 63 6b 	movl   $0x656b636f,0x20(%r15)
    2143:	65 
    2144:	66 41 c7 47 24 74 00 	movw   $0x74,0x24(%r15)
    214b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2150:	e9 03 03 00 00       	jmp    2458 <submitr+0x4ef>
    2155:	48 b8 45 72 72 6f 72 	movabs $0x44203a726f727245,%rax
    215c:	3a 20 44 
    215f:	48 ba 4e 53 20 69 73 	movabs $0x6e7520736920534e,%rdx
    2166:	20 75 6e 
    2169:	49 89 07             	mov    %rax,(%r15)
    216c:	49 89 57 08          	mov    %rdx,0x8(%r15)
    2170:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    2177:	74 6f 20 
    217a:	48 ba 72 65 73 6f 6c 	movabs $0x2065766c6f736572,%rdx
    2181:	76 65 20 
    2184:	49 89 47 10          	mov    %rax,0x10(%r15)
    2188:	49 89 57 18          	mov    %rdx,0x18(%r15)
    218c:	48 b8 73 65 72 76 65 	movabs $0x6120726576726573,%rax
    2193:	72 20 61 
    2196:	49 89 47 20          	mov    %rax,0x20(%r15)
    219a:	41 c7 47 28 64 64 72 	movl   $0x65726464,0x28(%r15)
    21a1:	65 
    21a2:	66 41 c7 47 2c 73 73 	movw   $0x7373,0x2c(%r15)
    21a9:	41 c6 47 2e 00       	movb   $0x0,0x2e(%r15)
    21ae:	44 89 e7             	mov    %r12d,%edi
    21b1:	e8 da f0 ff ff       	call   1290 <close@plt>
    21b6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    21bb:	e9 98 02 00 00       	jmp    2458 <submitr+0x4ef>
    21c0:	48 b8 45 72 72 6f 72 	movabs $0x55203a726f727245,%rax
    21c7:	3a 20 55 
    21ca:	48 ba 6e 61 62 6c 65 	movabs $0x6f7420656c62616e,%rdx
    21d1:	20 74 6f 
    21d4:	49 89 07             	mov    %rax,(%r15)
    21d7:	49 89 57 08          	mov    %rdx,0x8(%r15)
    21db:	48 b8 20 63 6f 6e 6e 	movabs $0x7463656e6e6f6320,%rax
    21e2:	65 63 74 
    21e5:	48 ba 20 74 6f 20 74 	movabs $0x20656874206f7420,%rdx
    21ec:	68 65 20 
    21ef:	49 89 47 10          	mov    %rax,0x10(%r15)
    21f3:	49 89 57 18          	mov    %rdx,0x18(%r15)
    21f7:	41 c7 47 20 73 65 72 	movl   $0x76726573,0x20(%r15)
    21fe:	76 
    21ff:	66 41 c7 47 24 65 72 	movw   $0x7265,0x24(%r15)
    2206:	41 c6 47 26 00       	movb   $0x0,0x26(%r15)
    220b:	44 89 e7             	mov    %r12d,%edi
    220e:	e8 7d f0 ff ff       	call   1290 <close@plt>
    2213:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2218:	e9 3b 02 00 00       	jmp    2458 <submitr+0x4ef>
    221d:	48 b8 45 72 72 6f 72 	movabs $0x52203a726f727245,%rax
    2224:	3a 20 52 
    2227:	48 ba 65 73 75 6c 74 	movabs $0x747320746c757365,%rdx
    222e:	20 73 74 
    2231:	49 89 07             	mov    %rax,(%r15)
    2234:	49 89 57 08          	mov    %rdx,0x8(%r15)
    2238:	48 b8 72 69 6e 67 20 	movabs $0x6f6f7420676e6972,%rax
    223f:	74 6f 6f 
    2242:	48 ba 20 6c 61 72 67 	movabs $0x202e656772616c20,%rdx
    2249:	65 2e 20 
    224c:	49 89 47 10          	mov    %rax,0x10(%r15)
    2250:	49 89 57 18          	mov    %rdx,0x18(%r15)
    2254:	48 b8 49 6e 63 72 65 	movabs $0x6573616572636e49,%rax
    225b:	61 73 65 
    225e:	48 ba 20 53 55 42 4d 	movabs $0x5254494d42555320,%rdx
    2265:	49 54 52 
    2268:	49 89 47 20          	mov    %rax,0x20(%r15)
    226c:	49 89 57 28          	mov    %rdx,0x28(%r15)
    2270:	48 b8 5f 4d 41 58 42 	movabs $0x46554258414d5f,%rax
    2277:	55 46 00 
    227a:	49 89 47 30          	mov    %rax,0x30(%r15)
    227e:	44 89 e7             	mov    %r12d,%edi
    2281:	e8 0a f0 ff ff       	call   1290 <close@plt>
    2286:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    228b:	e9 c8 01 00 00       	jmp    2458 <submitr+0x4ef>
    2290:	49 0f a3 c6          	bt     %rax,%r14
    2294:	73 21                	jae    22b7 <submitr+0x34e>
    2296:	44 88 45 00          	mov    %r8b,0x0(%rbp)
    229a:	48 8d 6d 01          	lea    0x1(%rbp),%rbp
    229e:	48 83 c3 01          	add    $0x1,%rbx
    22a2:	4c 39 eb             	cmp    %r13,%rbx
    22a5:	0f 84 35 03 00 00    	je     25e0 <submitr+0x677>
    22ab:	44 0f b6 03          	movzbl (%rbx),%r8d
    22af:	41 8d 40 d6          	lea    -0x2a(%r8),%eax
    22b3:	3c 35                	cmp    $0x35,%al
    22b5:	76 d9                	jbe    2290 <submitr+0x327>
    22b7:	44 89 c0             	mov    %r8d,%eax
    22ba:	83 e0 df             	and    $0xffffffdf,%eax
    22bd:	83 e8 41             	sub    $0x41,%eax
    22c0:	3c 19                	cmp    $0x19,%al
    22c2:	76 d2                	jbe    2296 <submitr+0x32d>
    22c4:	41 80 f8 20          	cmp    $0x20,%r8b
    22c8:	74 60                	je     232a <submitr+0x3c1>
    22ca:	41 8d 40 e0          	lea    -0x20(%r8),%eax
    22ce:	3c 5f                	cmp    $0x5f,%al
    22d0:	76 0a                	jbe    22dc <submitr+0x373>
    22d2:	41 80 f8 09          	cmp    $0x9,%r8b
    22d6:	0f 85 77 02 00 00    	jne    2553 <submitr+0x5ea>
    22dc:	45 0f b6 c0          	movzbl %r8b,%r8d
    22e0:	48 8d 0d df 11 00 00 	lea    0x11df(%rip),%rcx        # 34c6 <array.0+0x2e6>
    22e7:	ba 08 00 00 00       	mov    $0x8,%edx
    22ec:	be 01 00 00 00       	mov    $0x1,%esi
    22f1:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    22f6:	b8 00 00 00 00       	mov    $0x0,%eax
    22fb:	e8 a0 f0 ff ff       	call   13a0 <__sprintf_chk@plt>
    2300:	0f b6 84 24 60 e0 00 	movzbl 0xe060(%rsp),%eax
    2307:	00 
    2308:	88 45 00             	mov    %al,0x0(%rbp)
    230b:	0f b6 84 24 61 e0 00 	movzbl 0xe061(%rsp),%eax
    2312:	00 
    2313:	88 45 01             	mov    %al,0x1(%rbp)
    2316:	0f b6 84 24 62 e0 00 	movzbl 0xe062(%rsp),%eax
    231d:	00 
    231e:	88 45 02             	mov    %al,0x2(%rbp)
    2321:	48 8d 6d 03          	lea    0x3(%rbp),%rbp
    2325:	e9 74 ff ff ff       	jmp    229e <submitr+0x335>
    232a:	c6 45 00 2b          	movb   $0x2b,0x0(%rbp)
    232e:	48 8d 6d 01          	lea    0x1(%rbp),%rbp
    2332:	e9 67 ff ff ff       	jmp    229e <submitr+0x335>
    2337:	48 01 c5             	add    %rax,%rbp
    233a:	48 29 c3             	sub    %rax,%rbx
    233d:	0f 84 08 03 00 00    	je     264b <submitr+0x6e2>
    2343:	48 89 da             	mov    %rbx,%rdx
    2346:	48 89 ee             	mov    %rbp,%rsi
    2349:	44 89 e7             	mov    %r12d,%edi
    234c:	e8 ef ee ff ff       	call   1240 <write@plt>
    2351:	48 85 c0             	test   %rax,%rax
    2354:	7f e1                	jg     2337 <submitr+0x3ce>
    2356:	e8 b5 ee ff ff       	call   1210 <__errno_location@plt>
    235b:	83 38 04             	cmpl   $0x4,(%rax)
    235e:	0f 85 90 01 00 00    	jne    24f4 <submitr+0x58b>
    2364:	4c 89 e8             	mov    %r13,%rax
    2367:	eb ce                	jmp    2337 <submitr+0x3ce>
    2369:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
    2370:	3a 20 43 
    2373:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
    237a:	20 75 6e 
    237d:	49 89 07             	mov    %rax,(%r15)
    2380:	49 89 57 08          	mov    %rdx,0x8(%r15)
    2384:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    238b:	74 6f 20 
    238e:	48 ba 72 65 61 64 20 	movabs $0x7269662064616572,%rdx
    2395:	66 69 72 
    2398:	49 89 47 10          	mov    %rax,0x10(%r15)
    239c:	49 89 57 18          	mov    %rdx,0x18(%r15)
    23a0:	48 b8 73 74 20 68 65 	movabs $0x6564616568207473,%rax
    23a7:	61 64 65 
    23aa:	48 ba 72 20 66 72 6f 	movabs $0x73206d6f72662072,%rdx
    23b1:	6d 20 73 
    23b4:	49 89 47 20          	mov    %rax,0x20(%r15)
    23b8:	49 89 57 28          	mov    %rdx,0x28(%r15)
    23bc:	41 c7 47 30 65 72 76 	movl   $0x65767265,0x30(%r15)
    23c3:	65 
    23c4:	66 41 c7 47 34 72 00 	movw   $0x72,0x34(%r15)
    23cb:	44 89 e7             	mov    %r12d,%edi
    23ce:	e8 bd ee ff ff       	call   1290 <close@plt>
    23d3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    23d8:	eb 7e                	jmp    2458 <submitr+0x4ef>
    23da:	4c 8d 8c 24 60 e0 00 	lea    0xe060(%rsp),%r9
    23e1:	00 
    23e2:	48 8d 0d 2f 10 00 00 	lea    0x102f(%rip),%rcx        # 3418 <array.0+0x238>
    23e9:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    23f0:	be 01 00 00 00       	mov    $0x1,%esi
    23f5:	4c 89 ff             	mov    %r15,%rdi
    23f8:	b8 00 00 00 00       	mov    $0x0,%eax
    23fd:	e8 9e ef ff ff       	call   13a0 <__sprintf_chk@plt>
    2402:	44 89 e7             	mov    %r12d,%edi
    2405:	e8 86 ee ff ff       	call   1290 <close@plt>
    240a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    240f:	eb 47                	jmp    2458 <submitr+0x4ef>
    2411:	48 8d b4 24 60 20 00 	lea    0x2060(%rsp),%rsi
    2418:	00 
    2419:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
    241e:	ba 00 40 00 00       	mov    $0x4000,%edx
    2423:	e8 75 fa ff ff       	call   1e9d <rio_readlineb>
    2428:	48 85 c0             	test   %rax,%rax
    242b:	7e 54                	jle    2481 <submitr+0x518>
    242d:	48 8d b4 24 60 20 00 	lea    0x2060(%rsp),%rsi
    2434:	00 
    2435:	4c 89 ff             	mov    %r15,%rdi
    2438:	e8 e3 ed ff ff       	call   1220 <strcpy@plt>
    243d:	44 89 e7             	mov    %r12d,%edi
    2440:	e8 4b ee ff ff       	call   1290 <close@plt>
    2445:	48 8d 35 95 10 00 00 	lea    0x1095(%rip),%rsi        # 34e1 <array.0+0x301>
    244c:	4c 89 ff             	mov    %r15,%rdi
    244f:	e8 6c ee ff ff       	call   12c0 <strcmp@plt>
    2454:	f7 d8                	neg    %eax
    2456:	19 c0                	sbb    %eax,%eax
    2458:	48 8b 94 24 68 20 01 	mov    0x12068(%rsp),%rdx
    245f:	00 
    2460:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    2467:	00 00 
    2469:	0f 85 f8 02 00 00    	jne    2767 <submitr+0x7fe>
    246f:	48 81 c4 78 20 01 00 	add    $0x12078,%rsp
    2476:	5b                   	pop    %rbx
    2477:	5d                   	pop    %rbp
    2478:	41 5c                	pop    %r12
    247a:	41 5d                	pop    %r13
    247c:	41 5e                	pop    %r14
    247e:	41 5f                	pop    %r15
    2480:	c3                   	ret    
    2481:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
    2488:	3a 20 43 
    248b:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
    2492:	20 75 6e 
    2495:	49 89 07             	mov    %rax,(%r15)
    2498:	49 89 57 08          	mov    %rdx,0x8(%r15)
    249c:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    24a3:	74 6f 20 
    24a6:	48 ba 72 65 61 64 20 	movabs $0x6174732064616572,%rdx
    24ad:	73 74 61 
    24b0:	49 89 47 10          	mov    %rax,0x10(%r15)
    24b4:	49 89 57 18          	mov    %rdx,0x18(%r15)
    24b8:	48 b8 74 75 73 20 6d 	movabs $0x7373656d20737574,%rax
    24bf:	65 73 73 
    24c2:	48 ba 61 67 65 20 66 	movabs $0x6d6f726620656761,%rdx
    24c9:	72 6f 6d 
    24cc:	49 89 47 20          	mov    %rax,0x20(%r15)
    24d0:	49 89 57 28          	mov    %rdx,0x28(%r15)
    24d4:	48 b8 20 73 65 72 76 	movabs $0x72657672657320,%rax
    24db:	65 72 00 
    24de:	49 89 47 30          	mov    %rax,0x30(%r15)
    24e2:	44 89 e7             	mov    %r12d,%edi
    24e5:	e8 a6 ed ff ff       	call   1290 <close@plt>
    24ea:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    24ef:	e9 64 ff ff ff       	jmp    2458 <submitr+0x4ef>
    24f4:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
    24fb:	3a 20 43 
    24fe:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
    2505:	20 75 6e 
    2508:	49 89 07             	mov    %rax,(%r15)
    250b:	49 89 57 08          	mov    %rdx,0x8(%r15)
    250f:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    2516:	74 6f 20 
    2519:	48 ba 77 72 69 74 65 	movabs $0x6f74206574697277,%rdx
    2520:	20 74 6f 
    2523:	49 89 47 10          	mov    %rax,0x10(%r15)
    2527:	49 89 57 18          	mov    %rdx,0x18(%r15)
    252b:	48 b8 20 74 68 65 20 	movabs $0x7265732065687420,%rax
    2532:	73 65 72 
    2535:	49 89 47 20          	mov    %rax,0x20(%r15)
    2539:	41 c7 47 28 76 65 72 	movl   $0x726576,0x28(%r15)
    2540:	00 
    2541:	44 89 e7             	mov    %r12d,%edi
    2544:	e8 47 ed ff ff       	call   1290 <close@plt>
    2549:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    254e:	e9 05 ff ff ff       	jmp    2458 <submitr+0x4ef>
    2553:	48 b8 45 72 72 6f 72 	movabs $0x52203a726f727245,%rax
    255a:	3a 20 52 
    255d:	48 ba 65 73 75 6c 74 	movabs $0x747320746c757365,%rdx
    2564:	20 73 74 
    2567:	49 89 07             	mov    %rax,(%r15)
    256a:	49 89 57 08          	mov    %rdx,0x8(%r15)
    256e:	48 b8 72 69 6e 67 20 	movabs $0x6e6f6320676e6972,%rax
    2575:	63 6f 6e 
    2578:	48 ba 74 61 69 6e 73 	movabs $0x6e6120736e696174,%rdx
    257f:	20 61 6e 
    2582:	49 89 47 10          	mov    %rax,0x10(%r15)
    2586:	49 89 57 18          	mov    %rdx,0x18(%r15)
    258a:	48 b8 20 69 6c 6c 65 	movabs $0x6c6167656c6c6920,%rax
    2591:	67 61 6c 
    2594:	48 ba 20 6f 72 20 75 	movabs $0x72706e7520726f20,%rdx
    259b:	6e 70 72 
    259e:	49 89 47 20          	mov    %rax,0x20(%r15)
    25a2:	49 89 57 28          	mov    %rdx,0x28(%r15)
    25a6:	48 b8 69 6e 74 61 62 	movabs $0x20656c6261746e69,%rax
    25ad:	6c 65 20 
    25b0:	48 ba 63 68 61 72 61 	movabs $0x6574636172616863,%rdx
    25b7:	63 74 65 
    25ba:	49 89 47 30          	mov    %rax,0x30(%r15)
    25be:	49 89 57 38          	mov    %rdx,0x38(%r15)
    25c2:	66 41 c7 47 40 72 2e 	movw   $0x2e72,0x40(%r15)
    25c9:	41 c6 47 42 00       	movb   $0x0,0x42(%r15)
    25ce:	44 89 e7             	mov    %r12d,%edi
    25d1:	e8 ba ec ff ff       	call   1290 <close@plt>
    25d6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    25db:	e9 78 fe ff ff       	jmp    2458 <submitr+0x4ef>
    25e0:	48 8d 9c 24 60 20 00 	lea    0x2060(%rsp),%rbx
    25e7:	00 
    25e8:	48 83 ec 08          	sub    $0x8,%rsp
    25ec:	48 8d 84 24 68 60 00 	lea    0x6068(%rsp),%rax
    25f3:	00 
    25f4:	50                   	push   %rax
    25f5:	ff 74 24 28          	push   0x28(%rsp)
    25f9:	ff 74 24 38          	push   0x38(%rsp)
    25fd:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
    2602:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    2607:	48 8d 0d 3a 0e 00 00 	lea    0xe3a(%rip),%rcx        # 3448 <array.0+0x268>
    260e:	ba 00 40 00 00       	mov    $0x4000,%edx
    2613:	be 01 00 00 00       	mov    $0x1,%esi
    2618:	48 89 df             	mov    %rbx,%rdi
    261b:	b8 00 00 00 00       	mov    $0x0,%eax
    2620:	e8 7b ed ff ff       	call   13a0 <__sprintf_chk@plt>
    2625:	48 83 c4 20          	add    $0x20,%rsp
    2629:	48 89 df             	mov    %rbx,%rdi
    262c:	e8 1f ec ff ff       	call   1250 <strlen@plt>
    2631:	48 89 c3             	mov    %rax,%rbx
    2634:	48 8d ac 24 60 20 00 	lea    0x2060(%rsp),%rbp
    263b:	00 
    263c:	41 bd 00 00 00 00    	mov    $0x0,%r13d
    2642:	48 85 c0             	test   %rax,%rax
    2645:	0f 85 f8 fc ff ff    	jne    2343 <submitr+0x3da>
    264b:	44 89 64 24 50       	mov    %r12d,0x50(%rsp)
    2650:	c7 44 24 54 00 00 00 	movl   $0x0,0x54(%rsp)
    2657:	00 
    2658:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
    265d:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    2662:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    2667:	48 8d b4 24 60 20 00 	lea    0x2060(%rsp),%rsi
    266e:	00 
    266f:	ba 00 40 00 00       	mov    $0x4000,%edx
    2674:	e8 24 f8 ff ff       	call   1e9d <rio_readlineb>
    2679:	48 85 c0             	test   %rax,%rax
    267c:	0f 8e e7 fc ff ff    	jle    2369 <submitr+0x400>
    2682:	48 8d 4c 24 3c       	lea    0x3c(%rsp),%rcx
    2687:	48 8d 94 24 60 a0 00 	lea    0xa060(%rsp),%rdx
    268e:	00 
    268f:	48 8d bc 24 60 20 00 	lea    0x2060(%rsp),%rdi
    2696:	00 
    2697:	4c 8d 84 24 60 e0 00 	lea    0xe060(%rsp),%r8
    269e:	00 
    269f:	48 8d 35 27 0e 00 00 	lea    0xe27(%rip),%rsi        # 34cd <array.0+0x2ed>
    26a6:	b8 00 00 00 00       	mov    $0x0,%eax
    26ab:	e8 70 ec ff ff       	call   1320 <__isoc99_sscanf@plt>
    26b0:	44 8b 44 24 3c       	mov    0x3c(%rsp),%r8d
    26b5:	41 81 f8 c8 00 00 00 	cmp    $0xc8,%r8d
    26bc:	0f 85 18 fd ff ff    	jne    23da <submitr+0x471>
    26c2:	48 8d 1d 15 0e 00 00 	lea    0xe15(%rip),%rbx        # 34de <array.0+0x2fe>
    26c9:	48 8d bc 24 60 20 00 	lea    0x2060(%rsp),%rdi
    26d0:	00 
    26d1:	48 89 de             	mov    %rbx,%rsi
    26d4:	e8 e7 eb ff ff       	call   12c0 <strcmp@plt>
    26d9:	85 c0                	test   %eax,%eax
    26db:	0f 84 30 fd ff ff    	je     2411 <submitr+0x4a8>
    26e1:	48 8d b4 24 60 20 00 	lea    0x2060(%rsp),%rsi
    26e8:	00 
    26e9:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
    26ee:	ba 00 40 00 00       	mov    $0x4000,%edx
    26f3:	e8 a5 f7 ff ff       	call   1e9d <rio_readlineb>
    26f8:	48 85 c0             	test   %rax,%rax
    26fb:	7f cc                	jg     26c9 <submitr+0x760>
    26fd:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
    2704:	3a 20 43 
    2707:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
    270e:	20 75 6e 
    2711:	49 89 07             	mov    %rax,(%r15)
    2714:	49 89 57 08          	mov    %rdx,0x8(%r15)
    2718:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    271f:	74 6f 20 
    2722:	48 ba 72 65 61 64 20 	movabs $0x6165682064616572,%rdx
    2729:	68 65 61 
    272c:	49 89 47 10          	mov    %rax,0x10(%r15)
    2730:	49 89 57 18          	mov    %rdx,0x18(%r15)
    2734:	48 b8 64 65 72 73 20 	movabs $0x6f72662073726564,%rax
    273b:	66 72 6f 
    273e:	48 ba 6d 20 73 65 72 	movabs $0x726576726573206d,%rdx
    2745:	76 65 72 
    2748:	49 89 47 20          	mov    %rax,0x20(%r15)
    274c:	49 89 57 28          	mov    %rdx,0x28(%r15)
    2750:	41 c6 47 30 00       	movb   $0x0,0x30(%r15)
    2755:	44 89 e7             	mov    %r12d,%edi
    2758:	e8 33 eb ff ff       	call   1290 <close@plt>
    275d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2762:	e9 f1 fc ff ff       	jmp    2458 <submitr+0x4ef>
    2767:	e8 f4 ea ff ff       	call   1260 <__stack_chk_fail@plt>

000000000000276c <init_timeout>:
    276c:	f3 0f 1e fa          	endbr64 
    2770:	85 ff                	test   %edi,%edi
    2772:	75 01                	jne    2775 <init_timeout+0x9>
    2774:	c3                   	ret    
    2775:	53                   	push   %rbx
    2776:	89 fb                	mov    %edi,%ebx
    2778:	48 8d 35 e8 f6 ff ff 	lea    -0x918(%rip),%rsi        # 1e67 <sigalrm_handler>
    277f:	bf 0e 00 00 00       	mov    $0xe,%edi
    2784:	e8 47 eb ff ff       	call   12d0 <signal@plt>
    2789:	85 db                	test   %ebx,%ebx
    278b:	b8 00 00 00 00       	mov    $0x0,%eax
    2790:	0f 49 c3             	cmovns %ebx,%eax
    2793:	89 c7                	mov    %eax,%edi
    2795:	e8 e6 ea ff ff       	call   1280 <alarm@plt>
    279a:	5b                   	pop    %rbx
    279b:	c3                   	ret    

000000000000279c <init_driver>:
    279c:	f3 0f 1e fa          	endbr64 
    27a0:	41 54                	push   %r12
    27a2:	55                   	push   %rbp
    27a3:	53                   	push   %rbx
    27a4:	48 83 ec 20          	sub    $0x20,%rsp
    27a8:	48 89 fd             	mov    %rdi,%rbp
    27ab:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    27b2:	00 00 
    27b4:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    27b9:	31 c0                	xor    %eax,%eax
    27bb:	be 01 00 00 00       	mov    $0x1,%esi
    27c0:	bf 0d 00 00 00       	mov    $0xd,%edi
    27c5:	e8 06 eb ff ff       	call   12d0 <signal@plt>
    27ca:	be 01 00 00 00       	mov    $0x1,%esi
    27cf:	bf 1d 00 00 00       	mov    $0x1d,%edi
    27d4:	e8 f7 ea ff ff       	call   12d0 <signal@plt>
    27d9:	be 01 00 00 00       	mov    $0x1,%esi
    27de:	bf 1d 00 00 00       	mov    $0x1d,%edi
    27e3:	e8 e8 ea ff ff       	call   12d0 <signal@plt>
    27e8:	ba 00 00 00 00       	mov    $0x0,%edx
    27ed:	be 01 00 00 00       	mov    $0x1,%esi
    27f2:	bf 02 00 00 00       	mov    $0x2,%edi
    27f7:	e8 b4 eb ff ff       	call   13b0 <socket@plt>
    27fc:	85 c0                	test   %eax,%eax
    27fe:	0f 88 9c 00 00 00    	js     28a0 <init_driver+0x104>
    2804:	89 c3                	mov    %eax,%ebx
    2806:	48 8d 3d d7 0c 00 00 	lea    0xcd7(%rip),%rdi        # 34e4 <array.0+0x304>
    280d:	e8 ce ea ff ff       	call   12e0 <gethostbyname@plt>
    2812:	48 85 c0             	test   %rax,%rax
    2815:	0f 84 d1 00 00 00    	je     28ec <init_driver+0x150>
    281b:	49 89 e4             	mov    %rsp,%r12
    281e:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    2825:	00 
    2826:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    282d:	00 00 
    282f:	66 c7 04 24 02 00    	movw   $0x2,(%rsp)
    2835:	48 63 50 14          	movslq 0x14(%rax),%rdx
    2839:	48 8b 40 18          	mov    0x18(%rax),%rax
    283d:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
    2842:	b9 0c 00 00 00       	mov    $0xc,%ecx
    2847:	48 8b 30             	mov    (%rax),%rsi
    284a:	e8 a1 ea ff ff       	call   12f0 <__memmove_chk@plt>
    284f:	66 c7 44 24 02 3b 6e 	movw   $0x6e3b,0x2(%rsp)
    2856:	ba 10 00 00 00       	mov    $0x10,%edx
    285b:	4c 89 e6             	mov    %r12,%rsi
    285e:	89 df                	mov    %ebx,%edi
    2860:	e8 fb ea ff ff       	call   1360 <connect@plt>
    2865:	85 c0                	test   %eax,%eax
    2867:	0f 88 e7 00 00 00    	js     2954 <init_driver+0x1b8>
    286d:	89 df                	mov    %ebx,%edi
    286f:	e8 1c ea ff ff       	call   1290 <close@plt>
    2874:	66 c7 45 00 4f 4b    	movw   $0x4b4f,0x0(%rbp)
    287a:	c6 45 02 00          	movb   $0x0,0x2(%rbp)
    287e:	b8 00 00 00 00       	mov    $0x0,%eax
    2883:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    2888:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    288f:	00 00 
    2891:	0f 85 f5 00 00 00    	jne    298c <init_driver+0x1f0>
    2897:	48 83 c4 20          	add    $0x20,%rsp
    289b:	5b                   	pop    %rbx
    289c:	5d                   	pop    %rbp
    289d:	41 5c                	pop    %r12
    289f:	c3                   	ret    
    28a0:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
    28a7:	3a 20 43 
    28aa:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
    28b1:	20 75 6e 
    28b4:	48 89 45 00          	mov    %rax,0x0(%rbp)
    28b8:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    28bc:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    28c3:	74 6f 20 
    28c6:	48 ba 63 72 65 61 74 	movabs $0x7320657461657263,%rdx
    28cd:	65 20 73 
    28d0:	48 89 45 10          	mov    %rax,0x10(%rbp)
    28d4:	48 89 55 18          	mov    %rdx,0x18(%rbp)
    28d8:	c7 45 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%rbp)
    28df:	66 c7 45 24 74 00    	movw   $0x74,0x24(%rbp)
    28e5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    28ea:	eb 97                	jmp    2883 <init_driver+0xe7>
    28ec:	48 b8 45 72 72 6f 72 	movabs $0x44203a726f727245,%rax
    28f3:	3a 20 44 
    28f6:	48 ba 4e 53 20 69 73 	movabs $0x6e7520736920534e,%rdx
    28fd:	20 75 6e 
    2900:	48 89 45 00          	mov    %rax,0x0(%rbp)
    2904:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    2908:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    290f:	74 6f 20 
    2912:	48 ba 72 65 73 6f 6c 	movabs $0x2065766c6f736572,%rdx
    2919:	76 65 20 
    291c:	48 89 45 10          	mov    %rax,0x10(%rbp)
    2920:	48 89 55 18          	mov    %rdx,0x18(%rbp)
    2924:	48 b8 73 65 72 76 65 	movabs $0x6120726576726573,%rax
    292b:	72 20 61 
    292e:	48 89 45 20          	mov    %rax,0x20(%rbp)
    2932:	c7 45 28 64 64 72 65 	movl   $0x65726464,0x28(%rbp)
    2939:	66 c7 45 2c 73 73    	movw   $0x7373,0x2c(%rbp)
    293f:	c6 45 2e 00          	movb   $0x0,0x2e(%rbp)
    2943:	89 df                	mov    %ebx,%edi
    2945:	e8 46 e9 ff ff       	call   1290 <close@plt>
    294a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    294f:	e9 2f ff ff ff       	jmp    2883 <init_driver+0xe7>
    2954:	4c 8d 05 89 0b 00 00 	lea    0xb89(%rip),%r8        # 34e4 <array.0+0x304>
    295b:	48 8d 0d 3e 0b 00 00 	lea    0xb3e(%rip),%rcx        # 34a0 <array.0+0x2c0>
    2962:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    2969:	be 01 00 00 00       	mov    $0x1,%esi
    296e:	48 89 ef             	mov    %rbp,%rdi
    2971:	b8 00 00 00 00       	mov    $0x0,%eax
    2976:	e8 25 ea ff ff       	call   13a0 <__sprintf_chk@plt>
    297b:	89 df                	mov    %ebx,%edi
    297d:	e8 0e e9 ff ff       	call   1290 <close@plt>
    2982:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2987:	e9 f7 fe ff ff       	jmp    2883 <init_driver+0xe7>
    298c:	e8 cf e8 ff ff       	call   1260 <__stack_chk_fail@plt>

0000000000002991 <driver_post>:
    2991:	f3 0f 1e fa          	endbr64 
    2995:	53                   	push   %rbx
    2996:	4c 89 c3             	mov    %r8,%rbx
    2999:	85 c9                	test   %ecx,%ecx
    299b:	75 17                	jne    29b4 <driver_post+0x23>
    299d:	48 85 ff             	test   %rdi,%rdi
    29a0:	74 05                	je     29a7 <driver_post+0x16>
    29a2:	80 3f 00             	cmpb   $0x0,(%rdi)
    29a5:	75 33                	jne    29da <driver_post+0x49>
    29a7:	66 c7 03 4f 4b       	movw   $0x4b4f,(%rbx)
    29ac:	c6 43 02 00          	movb   $0x0,0x2(%rbx)
    29b0:	89 c8                	mov    %ecx,%eax
    29b2:	5b                   	pop    %rbx
    29b3:	c3                   	ret    
    29b4:	48 8d 35 41 0b 00 00 	lea    0xb41(%rip),%rsi        # 34fc <array.0+0x31c>
    29bb:	bf 01 00 00 00       	mov    $0x1,%edi
    29c0:	b8 00 00 00 00       	mov    $0x0,%eax
    29c5:	e8 66 e9 ff ff       	call   1330 <__printf_chk@plt>
    29ca:	66 c7 03 4f 4b       	movw   $0x4b4f,(%rbx)
    29cf:	c6 43 02 00          	movb   $0x0,0x2(%rbx)
    29d3:	b8 00 00 00 00       	mov    $0x0,%eax
    29d8:	eb d8                	jmp    29b2 <driver_post+0x21>
    29da:	41 50                	push   %r8
    29dc:	52                   	push   %rdx
    29dd:	4c 8d 0d 2f 0b 00 00 	lea    0xb2f(%rip),%r9        # 3513 <array.0+0x333>
    29e4:	49 89 f0             	mov    %rsi,%r8
    29e7:	48 89 f9             	mov    %rdi,%rcx
    29ea:	48 8d 15 26 0b 00 00 	lea    0xb26(%rip),%rdx        # 3517 <array.0+0x337>
    29f1:	be 6e 3b 00 00       	mov    $0x3b6e,%esi
    29f6:	48 8d 3d e7 0a 00 00 	lea    0xae7(%rip),%rdi        # 34e4 <array.0+0x304>
    29fd:	e8 67 f5 ff ff       	call   1f69 <submitr>
    2a02:	48 83 c4 10          	add    $0x10,%rsp
    2a06:	eb aa                	jmp    29b2 <driver_post+0x21>

Disassembly of section .fini:

0000000000002a08 <_fini>:
    2a08:	f3 0f 1e fa          	endbr64 
    2a0c:	48 83 ec 08          	sub    $0x8,%rsp
    2a10:	48 83 c4 08          	add    $0x8,%rsp
    2a14:	c3                   	ret    
